<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Yveda.blog</title>
  
  <subtitle>业精于勤荒于嬉</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://yveda.github.io/"/>
  <updated>2018-06-01T16:34:00.183Z</updated>
  <id>https://yveda.github.io/</id>
  
  <author>
    <name>Yveda</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>5月份总结</title>
    <link href="https://yveda.github.io/2018/05/31/20180531/"/>
    <id>https://yveda.github.io/2018/05/31/20180531/</id>
    <published>2018-05-31T14:56:29.000Z</published>
    <updated>2018-06-01T16:34:00.183Z</updated>
    
    <content type="html"><![CDATA[<h3 id="感想"><a href="#感想" class="headerlink" title="感想"></a>感想</h3><h5 id="5月第二个礼拜答辩，没想到导师问得很水，随便就过了"><a href="#5月第二个礼拜答辩，没想到导师问得很水，随便就过了" class="headerlink" title="5月第二个礼拜答辩，没想到导师问得很水，随便就过了"></a>5月第二个礼拜答辩，没想到导师问得很水，随便就过了</h5><a id="more"></a><h5 id="接下来就是坑爹的开始，苛刻的论文修改规范，让多少学子曝晒在烈日下-无语-，不是在打印店就是在打印店的路上"><a href="#接下来就是坑爹的开始，苛刻的论文修改规范，让多少学子曝晒在烈日下-无语-，不是在打印店就是在打印店的路上" class="headerlink" title="接下来就是坑爹的开始，苛刻的论文修改规范，让多少学子曝晒在烈日下[无语]，不是在打印店就是在打印店的路上"></a>接下来就是坑爹的开始，苛刻的论文修改规范，让多少学子曝晒在烈日下[无语]，不是在打印店就是在打印店的路上</h5><h5 id="五月中旬来到东方夏威夷之称的“鹭岛”厦门，熙熙攘攘的过往人群，到处是东色建筑特色的购物街与西方特写写字楼，天空湛蓝无比…"><a href="#五月中旬来到东方夏威夷之称的“鹭岛”厦门，熙熙攘攘的过往人群，到处是东色建筑特色的购物街与西方特写写字楼，天空湛蓝无比…" class="headerlink" title="五月中旬来到东方夏威夷之称的“鹭岛”厦门，熙熙攘攘的过往人群，到处是东色建筑特色的购物街与西方特写写字楼，天空湛蓝无比….."></a>五月中旬来到东方夏威夷之称的“鹭岛”厦门，熙熙攘攘的过往人群，到处是东色建筑特色的购物街与西方特写写字楼，天空湛蓝无比…..</h5><h5 id="月末这个礼拜就是投简历找工作，四处奔波"><a href="#月末这个礼拜就是投简历找工作，四处奔波" class="headerlink" title="月末这个礼拜就是投简历找工作，四处奔波"></a>月末这个礼拜就是投简历找工作，四处奔波</h5><h3 id="展望"><a href="#展望" class="headerlink" title="展望"></a>展望</h3><h5 id="期待找到一家自己满意的公司，好好发展当下"><a href="#期待找到一家自己满意的公司，好好发展当下" class="headerlink" title="期待找到一家自己满意的公司，好好发展当下"></a>期待找到一家自己满意的公司，好好发展当下</h5><h5 id="七分工作，两分生活，一分感悟"><a href="#七分工作，两分生活，一分感悟" class="headerlink" title="七分工作，两分生活，一分感悟"></a>七分工作，两分生活，一分感悟</h5><hr>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;感想&quot;&gt;&lt;a href=&quot;#感想&quot; class=&quot;headerlink&quot; title=&quot;感想&quot;&gt;&lt;/a&gt;感想&lt;/h3&gt;&lt;h5 id=&quot;5月第二个礼拜答辩，没想到导师问得很水，随便就过了&quot;&gt;&lt;a href=&quot;#5月第二个礼拜答辩，没想到导师问得很水，随便就过了&quot; class=&quot;headerlink&quot; title=&quot;5月第二个礼拜答辩，没想到导师问得很水，随便就过了&quot;&gt;&lt;/a&gt;5月第二个礼拜答辩，没想到导师问得很水，随便就过了&lt;/h5&gt;
    
    </summary>
    
      <category term="总结" scheme="https://yveda.github.io/categories/%E6%80%BB%E7%BB%93/"/>
    
    
      <category term="月度总结" scheme="https://yveda.github.io/tags/%E6%9C%88%E5%BA%A6%E6%80%BB%E7%BB%93/"/>
    
  </entry>
  
  <entry>
    <title>4月份总结</title>
    <link href="https://yveda.github.io/2018/04/28/20180430/"/>
    <id>https://yveda.github.io/2018/04/28/20180430/</id>
    <published>2018-04-28T13:51:29.000Z</published>
    <updated>2018-06-01T16:34:12.937Z</updated>
    
    <content type="html"><![CDATA[<h3 id="感想"><a href="#感想" class="headerlink" title="感想"></a>感想</h3><h5 id="快毕业了意味着也快要找工作了，感慨万千。多学点东西，多点出路。"><a href="#快毕业了意味着也快要找工作了，感慨万千。多学点东西，多点出路。" class="headerlink" title="快毕业了意味着也快要找工作了，感慨万千。多学点东西，多点出路。"></a>快毕业了意味着也快要找工作了，感慨万千。多学点东西，多点出路。</h5><a id="more"></a><h5 id="完成了一个毕业设计《基于vue框架的web音乐app的设计与实现》"><a href="#完成了一个毕业设计《基于vue框架的web音乐app的设计与实现》" class="headerlink" title="完成了一个毕业设计《基于vue框架的web音乐app的设计与实现》"></a>完成了一个毕业设计《基于vue框架的web音乐app的设计与实现》</h5><h5 id="4月9号-遇到了小幸运"><a href="#4月9号-遇到了小幸运" class="headerlink" title="4月9号 遇到了小幸运"></a>4月9号 遇到了小幸运</h5><h5 id="加深node-js和vue的掌握"><a href="#加深node-js和vue的掌握" class="headerlink" title="加深node.js和vue的掌握"></a>加深node.js和vue的掌握</h5><h3 id="展望"><a href="#展望" class="headerlink" title="展望"></a>展望</h3><h5 id="完善音乐移动端app"><a href="#完善音乐移动端app" class="headerlink" title="完善音乐移动端app"></a>完善音乐移动端app</h5><h5 id="Vue-Node-MongoDB项目"><a href="#Vue-Node-MongoDB项目" class="headerlink" title="Vue+Node+MongoDB项目"></a>Vue+Node+MongoDB项目</h5><h5 id="Vue-TODO-List"><a href="#Vue-TODO-List" class="headerlink" title="Vue TODO List"></a><a href="http://study.163.com/course/introduction.htm?courseId=1003797015#/courseDetail?tab=1" target="_blank" rel="noopener">Vue TODO List</a></h5><h5 id="完善个人博客-腾讯云"><a href="#完善个人博客-腾讯云" class="headerlink" title="完善个人博客+腾讯云"></a>完善个人博客+腾讯云</h5><hr>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;感想&quot;&gt;&lt;a href=&quot;#感想&quot; class=&quot;headerlink&quot; title=&quot;感想&quot;&gt;&lt;/a&gt;感想&lt;/h3&gt;&lt;h5 id=&quot;快毕业了意味着也快要找工作了，感慨万千。多学点东西，多点出路。&quot;&gt;&lt;a href=&quot;#快毕业了意味着也快要找工作了，感慨万千。多学点东西，多点出路。&quot; class=&quot;headerlink&quot; title=&quot;快毕业了意味着也快要找工作了，感慨万千。多学点东西，多点出路。&quot;&gt;&lt;/a&gt;快毕业了意味着也快要找工作了，感慨万千。多学点东西，多点出路。&lt;/h5&gt;
    
    </summary>
    
      <category term="总结" scheme="https://yveda.github.io/categories/%E6%80%BB%E7%BB%93/"/>
    
    
      <category term="月度总结" scheme="https://yveda.github.io/tags/%E6%9C%88%E5%BA%A6%E6%80%BB%E7%BB%93/"/>
    
  </entry>
  
  <entry>
    <title>Parcel新一代打包神器</title>
    <link href="https://yveda.github.io/2018/01/01/parcel-%E6%96%B0%E4%B8%80%E4%BB%A3%E6%89%93%E5%8C%85%E7%A5%9E%E5%99%A8/"/>
    <id>https://yveda.github.io/2018/01/01/parcel-新一代打包神器/</id>
    <published>2018-01-01T13:51:29.000Z</published>
    <updated>2018-06-01T17:01:59.026Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><ul><li>前端未来的发展前景是全栈（结合java，php），而不是单纯前端的全栈</li><li>使用node.js能开发区块链</li><li>it发展很快，跳出循环看世界</li></ul><a id="more"></a><ul><li>短短五年时间跳了五个台阶，基本上一年一个新技术<ul><li>2013-2018<ul><li>pc端 - 移动端h5 - 大数据 - 人工智能 - 区块链</li><li>也就是IT(信息技术)向DT(数据技术)的转变</li><li>还有物联网 智能家居 人工智能 中控系统 数据可视化</li></ul></li></ul></li></ul><h3 id="parcel定义"><a href="#parcel定义" class="headerlink" title="parcel定义"></a>parcel定义</h3><p> <a href="https://parceljs.org" target="_blank" rel="noopener">官网</a><br> 新一代web打包神器，适用于经验不同的开发者。它利用多核处理提供了极快的速度，并且不需要任何配置。跟webpack类似，webpack很复杂要配置很多东西，但是parcel是简化版本的webpack</p><h3 id="parcel的优点与缺点"><a href="#parcel的优点与缺点" class="headerlink" title="parcel的优点与缺点"></a>parcel的优点与缺点</h3><ul><li>优点<ul><li>无需配置</li><li>极速打包</li><li>自动转换<ul><li>内置了常见场景的构建方法及其依赖，无需再安装各种依赖</li></ul></li><li>模块热替换<ul><li>默认支持模块热替换，真正做到开箱即用</li></ul></li></ul></li><li>缺点<ul><li>不支持SourceMap：在开发模式下，Parcel也不会输出SourceMap,目前只能去调试可读性极低的代码</li><li>不支持剔除无效代码（TreeShaking）;很多时候我们只用到了库中的一个函数，结果parcel把整个库都打包了进来</li><li>一些依赖会让Parcel出错；当你的项目依赖了一些npm上面的模块时，有些npm模块会让parcel出错误</li></ul></li></ul><h3 id="使用Parcel的场景"><a href="#使用Parcel的场景" class="headerlink" title="使用Parcel的场景"></a>使用Parcel的场景</h3><p>目前Parcel只能用来构建用于运行在浏览器中的网页，这也是他的出发点和专注点，在软件行业不可能既简单又可以简单适应各种场景的方案，就算所谓的人工智能也许会解决这个问题，但人工智能不能保证百分百的正确性。</p><h3 id="如何安装npm包"><a href="#如何安装npm包" class="headerlink" title="如何安装npm包"></a>如何安装npm包</h3><ol><li>全局安装：npm install <package name=""> -g</package></li><li>本地安装：npm install <package name=""> –save-dev (开发依赖)</package></li></ol><h3 id="首先通过-Yarn-或者-npm-安装-Parcel"><a href="#首先通过-Yarn-或者-npm-安装-Parcel" class="headerlink" title="首先通过 Yarn 或者 npm 安装 Parcel"></a>首先通过 Yarn 或者 npm 安装 Parcel</h3><h5 id="Yarn"><a href="#Yarn" class="headerlink" title="Yarn:"></a>Yarn:</h5><blockquote><h6 id="yarn-global-add-parcel-bundler"><a href="#yarn-global-add-parcel-bundler" class="headerlink" title="yarn global add parcel-bundler"></a>yarn global add parcel-bundler</h6></blockquote><h5 id="npm"><a href="#npm" class="headerlink" title="npm:"></a>npm:</h5><blockquote><p>npm install -g parcel-bundler  </p></blockquote><h3 id="前端开发方式介绍："><a href="#前端开发方式介绍：" class="headerlink" title="前端开发方式介绍："></a>前端开发方式介绍：</h3><ul><li>传统开发方式：<ul><li>需求分析-设计-编码-测试-运行-维护（类似<strong>串联</strong>）<ul><li>特点：生产效率以及维护效率非常缓慢，得一个个去查找文件，去更改再上线。</li></ul></li></ul></li><li>现代化前端开发方式:<ul><li>模块化 工程化 组件化 全栈化<ul><li>特点：提高开发效率    <ul><li>开发/维护 阶段是非常有必要的<ul><li>开发：面对复杂的js和html越来越多了，我们之前只能做到手动去引入依赖，如何让文件之间的关系                              变得可依赖呢？或者让文件之间自动相关联。这就是所说的工程化，在这之前还要做到模块化（<strong>组件和模块的区别</strong>：区别在<strong>颗粒度</strong>方面，模块化可以理解为零件，比如轮胎上面的螺丝钉，组件就是轮胎）。</li></ul></li></ul></li></ul></li></ul></li></ul><h3 id="模块组件的核心思想"><a href="#模块组件的核心思想" class="headerlink" title="模块组件的核心思想"></a>模块组件的核心思想</h3><p>针对开发和维护阶段的，管理复杂的js，html文件，然后构建依赖关系图。之后我们进行文件更改的时候，我们直接构件图，就可以直接进行定位。传统方式只有左边这一块没有右边这一块。<br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://github.com/Yveda/-/blob/master/projectImage/parcel/clipboard.png?raw=true" alt="image" title="">                </div>                <div class="image-caption">image</div>            </figure></p><h3 id="webpack使用"><a href="#webpack使用" class="headerlink" title="webpack使用"></a>webpack使用</h3><p>打包，编译，开发环境应用是非常麻烦的，因为要借助很多插件，不管是引入插件还是入口出口都需要自己配置，那parcel就不需要用到配置文件了（webpack里面的配置文件是webpack.config.js）</p><h3 id="webpack和parccel打包速度对比"><a href="#webpack和parccel打包速度对比" class="headerlink" title="webpack和parccel打包速度对比"></a>webpack和parccel打包速度对比</h3><pre><code>parcel远远优于webpack</code></pre><p><img src="https://github.com/Yveda/-/blob/master/projectImage/parcel/webpack%E5%92%8Cparcel%E6%AF%94%E8%BE%83.png?raw=true" alt="image"></p><h3 id="parcel打包命令"><a href="#parcel打包命令" class="headerlink" title="parcel打包命令"></a>parcel打包命令</h3><p>parcel 主文件入口<br>比如说是 parcel index.html（全局安装可以用这个命令）<br>如果不是全局安装使用这条命令就会出现’parcel’不是内部或者外部命令，也不是可运行或批处理文件。解决方法是建立一个package.json文件。</p><h3 id="在你正在使用的项目目录下创建一个-package-json-文件"><a href="#在你正在使用的项目目录下创建一个-package-json-文件" class="headerlink" title="在你正在使用的项目目录下创建一个 package.json 文件"></a>在你正在使用的项目目录下创建一个 package.json 文件</h3><blockquote><p>yarn init -y</p></blockquote><h5 id="or"><a href="#or" class="headerlink" title="or"></a>or</h5><blockquote><p>npm init -y</p></blockquote><h3 id="在packjson-json文件里面配置打包命令："><a href="#在packjson-json文件里面配置打包命令：" class="headerlink" title="在packjson.json文件里面配置打包命令："></a>在packjson.json文件里面配置打包命令：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&quot;scripts&quot;: &#123;</span><br><span class="line">  &quot;test&quot;: &quot;echo \&quot;Error: no test specified\&quot; &amp;&amp; exit 1&quot;,</span><br><span class="line">  &quot;build&quot;: &quot;parcel index.html&quot;</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><h5 id="然后在根目录下面新建index-html文件和在app文件夹里面新建index-js文件，然后引入js"><a href="#然后在根目录下面新建index-html文件和在app文件夹里面新建index-js文件，然后引入js" class="headerlink" title="然后在根目录下面新建index.html文件和在app文件夹里面新建index.js文件，然后引入js"></a>然后在根目录下面新建index.html文件和在app文件夹里面新建index.js文件，然后引入js</h5><p>index.html<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;html&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">  &lt;script src=&quot;./app/index.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure></p><p>index.js</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">console.log(&quot;hello world&quot;);</span><br></pre></td></tr></table></figure><h3 id="接下来整合html和js"><a href="#接下来整合html和js" class="headerlink" title="接下来整合html和js"></a>接下来整合html和js</h3><h5 id="执行打包命令：npm-run-build"><a href="#执行打包命令：npm-run-build" class="headerlink" title="执行打包命令：npm run build"></a>执行打包命令：npm run build</h5><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://github.com/Yveda/-/blob/master/projectImage/parcel/%E6%89%93%E5%8C%85%E5%91%BD%E4%BB%A4.png?raw=true" alt="image" title="">                </div>                <div class="image-caption">image</div>            </figure><h5 id="可以看见他创建了一个开发的服务器环境"><a href="#可以看见他创建了一个开发的服务器环境" class="headerlink" title="可以看见他创建了一个开发的服务器环境"></a>可以看见他创建了一个开发的服务器环境</h5><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://github.com/Yveda/-/blob/master/projectImage/parcel/%E6%8E%A7%E5%88%B6%E5%8F%B0.png?raw=true" alt="image" title="">                </div>                <div class="image-caption">image</div>            </figure><h5 id="真正部署的是dist文件夹下面的"><a href="#真正部署的是dist文件夹下面的" class="headerlink" title="真正部署的是dist文件夹下面的"></a>真正部署的是dist文件夹下面的</h5><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://github.com/Yveda/-/blob/master/projectImage/parcel/element.png?raw=true" alt="image" title="">                </div>                <div class="image-caption">image</div>            </figure><h5 id="dist文件夹"><a href="#dist文件夹" class="headerlink" title="dist文件夹"></a>dist文件夹</h5><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://github.com/Yveda/-/blob/master/projectImage/parcel/%E6%96%87%E4%BB%B6%E5%A4%B9.png?raw=true" alt="image" title="">                </div>                <div class="image-caption">image</div>            </figure><h5 id="index-html："><a href="#index-html：" class="headerlink" title="index.html："></a>index.html：</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;html&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">  &lt;script src=&quot;/app.37d33215.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h5 id="打包的文件"><a href="#打包的文件" class="headerlink" title="打包的文件"></a>打包的文件</h5><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://github.com/Yveda/-/blob/master/projectImage/parcel/%E6%96%87%E4%BB%B6%E5%A4%B9.png?raw=true" alt="image" title="">                </div>                <div class="image-caption">image</div>            </figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">console.log(&quot;hello world&quot;);</span><br><span class="line">&#125;,&#123;&#125;],6:[function(require,module,exports) &#123;</span><br><span class="line"></span><br><span class="line">var OVERLAY_ID = &apos;__parcel__error__overlay__&apos;;</span><br><span class="line"></span><br><span class="line">var global = (1, eval)(&apos;this&apos;);</span><br><span class="line">var OldModule = module.bundle.Module;</span><br></pre></td></tr></table></figure><h3 id="后期怎么进行维护："><a href="#后期怎么进行维护：" class="headerlink" title="后期怎么进行维护："></a>后期怎么进行维护：</h3><p>就不需要像传统方式一样，一个个去找，只需要这个文件在什么地方，我们进行文件名的更改，然后再进行布局就行了。<br>例如改下app/index.js<br>console.log(“welcome to see you”);<br>然后index.html的控制台里面的数值也发生对应变化，专有名词解释叫<strong>模块热替换</strong>，就是我改变文件内容，前台会自动更新，不需要手动去刷新。</p><h3 id="parcel的自动转化的特点："><a href="#parcel的自动转化的特点：" class="headerlink" title="parcel的自动转化的特点："></a>parcel的自动转化的特点：</h3><p>场景:js的代码兼容性处理，用es6能提高开发效率，但是es6的兼容不好，我们现在用babel-loader来处理es6的兼容性，babel-loader他是个预处理器，如果我们用webpack需要去下载babel-loader，并且还需呀去配置解析，但是用parcel就不需要。<br>假设在index.js里面写个类，在es5里面没有类的概念。</p><h5 id="index-js："><a href="#index-js：" class="headerlink" title="index.js："></a>index.js：</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">class Point&#123;</span><br><span class="line">constructor() &#123;</span><br><span class="line">this.name = &quot;yveda&quot;</span><br><span class="line">this.age = 18</span><br><span class="line">&#125;</span><br><span class="line">go()&#123;</span><br><span class="line">console.log(`$&#123;this.name&#125;的年龄是$&#123;this.age&#125;岁`)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">const point = new Point()//实例化一下</span><br><span class="line">point.go()//执行一下</span><br></pre></td></tr></table></figure><h5 id="然后localhost-1234-的控制台里面显示的是："><a href="#然后localhost-1234-的控制台里面显示的是：" class="headerlink" title="然后localhost:1234  的控制台里面显示的是："></a>然后localhost:1234  的控制台里面显示的是：</h5><p>yveda的年龄是18岁</p><h5 id="而且在app-37d33215-js里面："><a href="#而且在app-37d33215-js里面：" class="headerlink" title="而且在app.37d33215.js里面："></a>而且在app.37d33215.js里面：</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">//含有es5的代码，他改成了构造函数的类型 </span><br><span class="line">var Point = function () &#123;</span><br><span class="line">function Point() &#123;</span><br><span class="line">_classCallCheck(this, Point);</span><br><span class="line"></span><br><span class="line">this.name = &quot;yveda&quot;;</span><br><span class="line">this.age = 18;</span><br><span class="line">&#125;</span><br><span class="line">_createClass(Point, [&#123;</span><br><span class="line">key: &quot;go&quot;,</span><br><span class="line">value: function go() &#123;</span><br><span class="line">console.log(this.name + &quot;\u7684\u5E74\u9F84\u662F&quot; + this.age + &quot;\u5C81&quot;);</span><br><span class="line">&#125;</span><br><span class="line">&#125;]);</span><br><span class="line">return Point;</span><br><span class="line">&#125;();</span><br><span class="line">//所以这个parcel非常强大的一点，不需要跟wepack一样去下载很多插件</span><br></pre></td></tr></table></figure><h5 id="再举个例子："><a href="#再举个例子：" class="headerlink" title="再举个例子："></a>再举个例子：</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">//在index.js后面添</span><br><span class="line">const arr = [1,2,3];</span><br><span class="line">console.log(...arr)</span><br></pre></td></tr></table></figure><p>然后再次进行打包npm run build<br>在里面app.37d33215.js找到如下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">var arr = [1, 2, 3];</span><br><span class="line">(_console = console).log.apply(_console, arr);</span><br><span class="line">&#125;,&#123;&#125;],4:[function(require,module,exports) &#123;</span><br></pre></td></tr></table></figure><p>发现他把这个点转化成apply了，所以这就是parcel的自动转换，es6自动转换为es5</p><h3 id="css的引入"><a href="#css的引入" class="headerlink" title="css的引入"></a>css的引入</h3><p>现在我们做组件和模块，很少把js和css引入当前的html当中，在组件化开发中，js和css一般都放在一起的，那怎么让两个之间相关联呢？<br>如果使用webpack的话，需要一个css-loader，style-loader,还有要import css。</p><h5 id="新建app-css-style-css"><a href="#新建app-css-style-css" class="headerlink" title="新建app/css/style.css:"></a>新建app/css/style.css:</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">body&#123;</span><br><span class="line">margin:0;</span><br><span class="line">background: #008666;</span><br><span class="line">color: #000;</span><br><span class="line">&#125;</span><br><span class="line">.box&#123;</span><br><span class="line">width: 220px;</span><br><span class="line">height: 200px;</span><br><span class="line">border:3px solid red;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="然后在index-js里面引入style-css添加一个块"><a href="#然后在index-js里面引入style-css添加一个块" class="headerlink" title="然后在index.js里面引入style.css添加一个块"></a>然后在index.js里面引入style.css添加一个块</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">import &quot;../css/style.css&quot;;</span><br><span class="line">const oDiv = document.createElement(&apos;div&apos;);</span><br><span class="line">oDiv.className = &apos;box&apos;;</span><br><span class="line">document.body.appendChild(oDiv);</span><br><span class="line"></span><br><span class="line">class Point&#123;</span><br><span class="line">constructor() &#123;</span><br><span class="line">this.name = &quot;yveda&quot;</span><br><span class="line">this.age = 18</span><br><span class="line">&#125;</span><br><span class="line">go()&#123;</span><br><span class="line">console.log(`$&#123;this.name&#125;的年龄是$&#123;this.age&#125;岁`)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">const point = new Point()//实例化一下</span><br><span class="line">point.go()//执行一下</span><br><span class="line"></span><br><span class="line">const arr = [1,2,3];</span><br><span class="line">console.log(...arr)</span><br></pre></td></tr></table></figure><p>进行打包 npm run build<br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://github.com/Yveda/-/blob/master/projectImage/parcel/%E7%BA%A2%E8%89%B2%E8%BE%B9%E6%A1%86.png?raw=true" alt="image" title="">                </div>                <div class="image-caption">image</div>            </figure><br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://github.com/Yveda/-/blob/master/projectImage/parcel/%E8%80%8C%E5%A4%96%E7%9A%84%E6%8E%A7%E5%88%B6%E5%8F%B0.png?raw=true" alt="image" title="">                </div>                <div class="image-caption">image</div>            </figure></p><h5 id="进入控制台"><a href="#进入控制台" class="headerlink" title="进入控制台"></a>进入控制台</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;html&gt;</span><br><span class="line">&lt;link rel=&quot;stylesheet&quot; href=&quot;/style.aa408015.css&quot;&gt;</span><br><span class="line">&lt;script src=&quot;/style.aa408015.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">  &lt;script src=&quot;/js.2a519707.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p>右击/style.aa408015.css，选择open in new table，发现样式已经引入进来了</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">body&#123;</span><br><span class="line">margin:0;</span><br><span class="line">background: #333333;</span><br><span class="line">color: #000;</span><br><span class="line">&#125;</span><br><span class="line">.box&#123;</span><br><span class="line">width: 220px;</span><br><span class="line">height: 200px;</span><br><span class="line">border:3px solid red;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="在新建一个app-js-app-js"><a href="#在新建一个app-js-app-js" class="headerlink" title="在新建一个app/js/app.js"></a>在新建一个app/js/app.js</h5><p>并将index.js里面的东西清空，将原先index.js里面的内容全部剪切到app.js里面<br>然后将app.js导入到index.js里面</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">import Print from &apos;./app.js&apos;;</span><br><span class="line">Print();</span><br></pre></td></tr></table></figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://github.com/Yveda/-/blob/master/projectImage/parcel/%E4%B8%A4%E4%B8%AA%E7%BA%A2%E8%89%B2%E8%BE%B9%E6%A1%86.png?raw=true" alt="image" title="">                </div>                <div class="image-caption">image</div>            </figure><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><ul><li>开发的问题<ul><li>怎么提高开发效率(协同开发)</li><li>怎么降低维护难度<ul><li>怎么解决？<ul><li>制定开发规范(<a href="http://tgideas.qq.com/doc/" target="_blank" rel="noopener">腾讯开发规范</a>)</li><li>模块化/组件化</li></ul></li></ul></li></ul></li></ul><ul><li>部署<ul><li>代码检查</li><li>压缩代码</li><li>增量更新</li><li>单元测试</li></ul></li></ul><p>怎么解决？<br>构建(全部文件进行编译)和编译(单文件编译)，<br>我用parcel和webpack这种就是构建</p><h3 id="传统前端工程体系："><a href="#传统前端工程体系：" class="headerlink" title="传统前端工程体系："></a>传统前端工程体系：</h3><ol><li>应用层：image，css，js等</li><li>server层：CDN，tpl，http….</li><li>QA层：集成测试</li><li>开发层：单元测试，image,js，sass,less,java,php,python…</li><li>数据层：DB</li></ol><h3 id="大前端-前端工程体系"><a href="#大前端-前端工程体系" class="headerlink" title="大前端 前端工程体系"></a>大前端 前端工程体系</h3><ol><li>应用层：image，css，js等</li><li>server层：CDN，tpl，http….</li><li>QA层：集成测试</li><li>开发层：前后端分离，使用node.js跟服务器端进行数据的交互。</li><li>数据层：DB</li></ol><p>为什么现在大前端能做这些项目的构建打包，集成测试是因为有了node.js，他改变了前端，通过这个东西他跟后台，数据库做交互。</p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;前端未来的发展前景是全栈（结合java，php），而不是单纯前端的全栈&lt;/li&gt;
&lt;li&gt;使用node.js能开发区块链&lt;/li&gt;
&lt;li&gt;it发展很快，跳出循环看世界&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="项目构建部署" scheme="https://yveda.github.io/categories/%E9%A1%B9%E7%9B%AE%E6%9E%84%E5%BB%BA%E9%83%A8%E7%BD%B2/"/>
    
    
      <category term="Parcel" scheme="https://yveda.github.io/tags/Parcel/"/>
    
  </entry>
  
  <entry>
    <title>hexo文件配置及主题</title>
    <link href="https://yveda.github.io/2017/12/09/hexo02/"/>
    <id>https://yveda.github.io/2017/12/09/hexo02/</id>
    <published>2017-12-09T15:51:29.000Z</published>
    <updated>2018-06-01T16:58:58.051Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><h5 id="配置文件和Shana主题"><a href="#配置文件和Shana主题" class="headerlink" title="配置文件和Shana主题"></a>配置文件和Shana主题</h5><a id="more"></a><h3 id="设置头像"><a href="#设置头像" class="headerlink" title="设置头像"></a>设置头像</h3><ul><li>在站点配置文件中,添加avatar字段,值设置成头像的链接地址</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">avatar: /images/avatar.png</span><br><span class="line">路径主题文件source/images目录下</span><br></pre></td></tr></table></figure><h3 id="设置网站图标-注意必须为ico格式"><a href="#设置网站图标-注意必须为ico格式" class="headerlink" title="设置网站图标(注意必须为ico格式)"></a>设置网站图标(注意必须为ico格式)</h3><ul><li>在主题配置文件中,把favicon的注释去掉即可<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># Put your favicon.ico into `hexo-site/source/` directory.</span><br><span class="line">favicon: images/favicon.ico</span><br><span class="line">//路径主题文件source/images目录下</span><br></pre></td></tr></table></figure></li></ul><h3 id="自定义代码高亮"><a href="#自定义代码高亮" class="headerlink" title="自定义代码高亮"></a>自定义代码高亮</h3><ul><li>在hexo-theme-shana\source\css_partial\highlight.styl<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$code-block</span><br><span class="line">  border-left: 5px solid #eb3c3c</span><br><span class="line">  background: #9d</span><br><span class="line">  margin: 0 article-padding * -1</span><br><span class="line">  padding: 15px article-padding</span><br><span class="line">  overflow: auto</span><br><span class="line">  color: highlight-foreground</span><br><span class="line">  line-height: font-size * line-height</span><br></pre></td></tr></table></figure></li></ul><h3 id="自定义背景图片"><a href="#自定义背景图片" class="headerlink" title="自定义背景图片"></a>自定义背景图片</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo-theme-shana\source\plugin\bganimation\bg.css</span><br><span class="line">替换里面的图片url就可以了</span><br></pre></td></tr></table></figure><h3 id="hexo设置网站的图标Favicon"><a href="#hexo设置网站的图标Favicon" class="headerlink" title="hexo设置网站的图标Favicon"></a>hexo设置网站的图标Favicon</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">具体方法实现:</span><br><span class="line">ico图标 32*32 去别的网站下载或者制作，并将图标名称改为 favicon.ico，然后把图标放在/themes/next/source/images里，并且修改主题配置文件：</span><br><span class="line">favicon: images/favicon.ico</span><br><span class="line">//路径主题文件source/images目录下</span><br></pre></td></tr></table></figure><h3 id="文章打赏功能"><a href="#文章打赏功能" class="headerlink" title="文章打赏功能"></a>文章打赏功能</h3><ul><li>越来越多的平台（微信公众平台，新浪微博，简书，百度打赏等）支持打赏功能，付费阅读时代越来越近，Next特此增加了打赏功能，支持微信打赏和支付宝打赏。 只需要复制下面的代码添加到主题配置文件中即可开启该功能。</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">reward_comment: 坚持原创技术分享，您的支持将鼓励我继续创作！</span><br><span class="line">wechatpay: 图片链接</span><br><span class="line">alipay: 图片链接</span><br></pre></td></tr></table></figure><h3 id="设置友情链接"><a href="#设置友情链接" class="headerlink" title="设置友情链接"></a>设置友情链接</h3><ul><li>在主题文件开启links_title和links即可</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">title</span><br><span class="line">links_title: 前端工具箱</span><br><span class="line">links_layout: block</span><br><span class="line">links_layout: inline</span><br><span class="line">links:</span><br><span class="line">   代码压缩: http://tool.oschina.net/jscompress</span><br><span class="line">   CSS整理: http://example</span><br></pre></td></tr></table></figure><h3 id="添加标签页面"><a href="#添加标签页面" class="headerlink" title="添加标签页面"></a>添加标签页面</h3><ul><li>使用： hexo new page tags 新建一个 标签页面（或者直接在文件夹里面新建一个tags文件夹里面包含一个index.md）</li><li><p>主题的 _config.yml 文件中的 menu 中进行匹配</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">menu:</span><br><span class="line">  home: /      //主页</span><br><span class="line">  categories: /categories //分类</span><br><span class="line">  archives: /archives   //归档</span><br><span class="line">  tags: /tags   //标签                  （添加此行即可）</span><br><span class="line">  about: /about   //关于</span><br></pre></td></tr></table></figure></li><li><p>底下代码是一篇包含 标签 文章的例子：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">title: 标签测试</span><br><span class="line">tags:</span><br><span class="line">  - Testing                   （这个就是文章的标签了）</span><br><span class="line">  - Another Tag               （这个就是文章的标签了）</span><br></pre></td></tr></table></figure></li><li><p>tags文件夹里面是index.md</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: tags</span><br><span class="line">date: 2014-12-22 </span><br><span class="line">type: &quot;tags&quot;</span><br><span class="line">layout: &quot;tags&quot;</span><br><span class="line">---</span><br></pre></td></tr></table></figure></li></ul><h3 id="添加-分类页面"><a href="#添加-分类页面" class="headerlink" title="添加 分类页面"></a>添加 分类页面</h3><ul><li>使用： hexo new page categories 新建一个 分类 页面。 </li><li><p>主题的 _config.yml 文件中的 menu 中进行匹配</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">menu:</span><br><span class="line">  home: /      //主页</span><br><span class="line">  categories: /categories //分类        （添加此行即可）</span><br><span class="line">  archives: /archives   //归档</span><br><span class="line">  tags: /tags   //标签                  </span><br><span class="line">  about: /about   //关于</span><br></pre></td></tr></table></figure></li><li><p>底下代码是一篇包含 分类 文章的例子：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">title: 分类测试</span><br><span class="line">categories:</span><br><span class="line">- hexo                       （这个就是文章的分类了）</span><br></pre></td></tr></table></figure></li><li><p>categories文件夹里面是index.md</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: 分类</span><br><span class="line">date: 2014-12-22</span><br><span class="line">type: &quot;categories&quot;</span><br><span class="line">layout: &quot;categories&quot;</span><br><span class="line">---</span><br></pre></td></tr></table></figure></li></ul><h3 id="hexo-categories和tags页面不显示解决办法"><a href="#hexo-categories和tags页面不显示解决办法" class="headerlink" title="hexo categories和tags页面不显示解决办法"></a>hexo categories和tags页面不显示解决办法</h3><h4 id="方法一："><a href="#方法一：" class="headerlink" title="方法一：　　"></a>方法一：　　</h4><ul><li><p>scaffolds/draft.md　　　　</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: &#123;&#123; title &#125;&#125;</span><br><span class="line">tags: &#123;&#123; tags &#125;&#125;</span><br><span class="line">---</span><br></pre></td></tr></table></figure></li><li><p>scaffolds/post.md</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: &#123;&#123; title &#125;&#125;</span><br><span class="line">date: &#123;&#123; date &#125;&#125;</span><br><span class="line">tags: &#123;&#123; tags &#125;&#125;</span><br><span class="line">---</span><br></pre></td></tr></table></figure></li><li><p>tags/index</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: Tagcloud</span><br><span class="line">date: 2017-04-26 17:47:43</span><br><span class="line">type: &quot;tags&quot;</span><br><span class="line">layout: &quot;tags&quot;</span><br><span class="line">---</span><br></pre></td></tr></table></figure></li></ul><h4 id="方法二："><a href="#方法二：" class="headerlink" title="方法二："></a>方法二：</h4><ul><li><p>1.默认是没有 categories 和 tags 的需要</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo new page &quot;tags&quot; </span><br><span class="line"></span><br><span class="line">hexo new page &quot;categories&quot;</span><br></pre></td></tr></table></figure></li><li><p>2.编辑 /tags/index.md /categories/index.md</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">type: &quot;tags&quot;</span><br><span class="line">layout: &quot;tags&quot;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">type: &quot;categories&quot;</span><br><span class="line">layout: &quot;categories&quot;</span><br></pre></td></tr></table></figure></li></ul><h3 id="修改底部logo"><a href="#修改底部logo" class="headerlink" title="修改底部logo"></a>修改底部logo</h3><p>找到 \themes\next\layout_partials\下面的footer.swig文件</p><hr>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;h5 id=&quot;配置文件和Shana主题&quot;&gt;&lt;a href=&quot;#配置文件和Shana主题&quot; class=&quot;headerlink&quot; title=&quot;配置文件和Shana主题&quot;&gt;&lt;/a&gt;配置文件和Shana主题&lt;/h5&gt;
    
    </summary>
    
      <category term="hexo" scheme="https://yveda.github.io/categories/hexo/"/>
    
    
      <category term="hexo-config" scheme="https://yveda.github.io/tags/hexo-config/"/>
    
      <category term="hexo-theme" scheme="https://yveda.github.io/tags/hexo-theme/"/>
    
  </entry>
  
  <entry>
    <title>用hexo搭建博客</title>
    <link href="https://yveda.github.io/2017/12/08/hexo01/"/>
    <id>https://yveda.github.io/2017/12/08/hexo01/</id>
    <published>2017-12-08T14:51:29.000Z</published>
    <updated>2018-06-01T16:59:22.821Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">搭建一个博客感觉很酷很炫，本着这个心理我就想创建一个个人博客。</span><br><span class="line">hexo官网：https://hexo.io/zh-cn/</span><br></pre></td></tr></table></figure><a id="more"></a><h3 id="安装git，node-js"><a href="#安装git，node-js" class="headerlink" title="安装git，node.js"></a>安装git，node.js</h3><h3 id="安装hexo"><a href="#安装hexo" class="headerlink" title="安装hexo"></a>安装hexo</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">安装前先介绍几个hexo常用的命令,#后面为注释。</span><br><span class="line">1.$ hexo g #完整命令为hexo generate，用于生成静态文件</span><br><span class="line">2.$ hexo s #完整命令为hexo server，用于启动服务器，主要用来本地预览</span><br><span class="line">3.$ hexo d #完整命令为hexo deploy，用于将本地文件发布到github上</span><br><span class="line">4.$ hexo n #完整命令为hexo new，用于新建一篇文章</span><br><span class="line">5.$hexo new page &quot;pageName&quot; ,新建页面</span><br></pre></td></tr></table></figure><h5 id="安装脚手架"><a href="#安装脚手架" class="headerlink" title="安装脚手架"></a>安装脚手架</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">鼠标右键任意地方，选择Git Bash，使用以下命令安装hexo</span><br><span class="line">$ npm install hexo-cli -g</span><br></pre></td></tr></table></figure><h5 id="如果之后在使用的过程中，遇到以下的错误"><a href="#如果之后在使用的过程中，遇到以下的错误" class="headerlink" title="如果之后在使用的过程中，遇到以下的错误"></a>如果之后在使用的过程中，遇到以下的错误</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ERROR Deployer not found : github</span><br></pre></td></tr></table></figure><h5 id="则运行以下命令-或者你直接先运行这个命令更好。"><a href="#则运行以下命令-或者你直接先运行这个命令更好。" class="headerlink" title="则运行以下命令,或者你直接先运行这个命令更好。"></a>则运行以下命令,或者你直接先运行这个命令更好。</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><h5 id="创建放置博客的文件夹：D-HEXO-记得备份，点击鼠标右键，选择Git-Bash，执行以下命令，Hexo会自动在该文件夹下下载搭建网站所需的所有文件。"><a href="#创建放置博客的文件夹：D-HEXO-记得备份，点击鼠标右键，选择Git-Bash，执行以下命令，Hexo会自动在该文件夹下下载搭建网站所需的所有文件。" class="headerlink" title="创建放置博客的文件夹：D:\HEXO  记得备份，点击鼠标右键，选择Git Bash，执行以下命令，Hexo会自动在该文件夹下下载搭建网站所需的所有文件。"></a>创建放置博客的文件夹：D:\HEXO  记得备份，点击鼠标右键，选择Git Bash，执行以下命令，Hexo会自动在该文件夹下下载搭建网站所需的所有文件。</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo init</span><br></pre></td></tr></table></figure><h5 id="安装依赖包"><a href="#安装依赖包" class="headerlink" title="安装依赖包"></a>安装依赖包</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install</span><br></pre></td></tr></table></figure><h5 id="看看刚刚下载的HEXO文件带来了什么，在D-HEXO内执行以下命令"><a href="#看看刚刚下载的HEXO文件带来了什么，在D-HEXO内执行以下命令" class="headerlink" title="看看刚刚下载的HEXO文件带来了什么，在D:\HEXO内执行以下命令:"></a>看看刚刚下载的HEXO文件带来了什么，在D:\HEXO内执行以下命令:</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ hexo g</span><br><span class="line">$ hexo s</span><br></pre></td></tr></table></figure><h6 id="然后用浏览器访问http-localhost-4000-，会看到一个漂亮的博客了，当然这个博客只是在本地的，别人是看不到的，hexo3-0使用的默认主题是landscape。轻轻松松就看到了一点成果，是不是很激动，这就是hexo的强大之处，这个本地预览的功能，我真是爱不释手。"><a href="#然后用浏览器访问http-localhost-4000-，会看到一个漂亮的博客了，当然这个博客只是在本地的，别人是看不到的，hexo3-0使用的默认主题是landscape。轻轻松松就看到了一点成果，是不是很激动，这就是hexo的强大之处，这个本地预览的功能，我真是爱不释手。" class="headerlink" title="然后用浏览器访问http://localhost:4000/，会看到一个漂亮的博客了，当然这个博客只是在本地的，别人是看不到的，hexo3.0使用的默认主题是landscape。轻轻松松就看到了一点成果，是不是很激动，这就是hexo的强大之处，这个本地预览的功能，我真是爱不释手。"></a>然后用浏览器访问<a href="http://localhost:4000/，会看到一个漂亮的博客了，当然这个博客只是在本地的，别人是看不到的，hexo3.0使用的默认主题是landscape。轻轻松松就看到了一点成果，是不是很激动，这就是hexo的强大之处，这个本地预览的功能，我真是爱不释手。" target="_blank" rel="noopener">http://localhost:4000/，会看到一个漂亮的博客了，当然这个博客只是在本地的，别人是看不到的，hexo3.0使用的默认主题是landscape。轻轻松松就看到了一点成果，是不是很激动，这就是hexo的强大之处，这个本地预览的功能，我真是爱不释手。</a></h6><h5 id="接下来在github里面创建一个仓库"><a href="#接下来在github里面创建一个仓库" class="headerlink" title="接下来在github里面创建一个仓库"></a>接下来在github里面创建一个仓库</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">仓库名字格式为youname.github.io,例如我的叫Yveda.github.io，注意：此处的youname必须为你的github用户名，用户名是可以用来登陆的。</span><br></pre></td></tr></table></figure><h3 id="部署本地文件到github"><a href="#部署本地文件到github" class="headerlink" title="部署本地文件到github"></a>部署本地文件到github</h3><h5 id="既然Repository已经创建了，当然是先把博客放到Github上去看看效果。编辑D：-hexo下的-config-yml文件。在-config-yml最下方，添加如下配置-命令中的第一个Yveda为Github的用户名-第二Yveda为之前New的Repository的名字-记得改成自己的。另外记得一点，hexo的配置文件中任何’-’后面都是带一个空格的-如果配置以下命令出现ERROR-Deployer-not-found-github，则参考上文的解决方法。"><a href="#既然Repository已经创建了，当然是先把博客放到Github上去看看效果。编辑D：-hexo下的-config-yml文件。在-config-yml最下方，添加如下配置-命令中的第一个Yveda为Github的用户名-第二Yveda为之前New的Repository的名字-记得改成自己的。另外记得一点，hexo的配置文件中任何’-’后面都是带一个空格的-如果配置以下命令出现ERROR-Deployer-not-found-github，则参考上文的解决方法。" class="headerlink" title="既然Repository已经创建了，当然是先把博客放到Github上去看看效果。编辑D：\hexo下的_config.yml文件。在_config.yml最下方，添加如下配置(命令中的第一个Yveda为Github的用户名,第二Yveda为之前New的Repository的名字,记得改成自己的。另外记得一点，hexo的配置文件中任何’:’后面都是带一个空格的),如果配置以下命令出现ERROR Deployer not found : github，则参考上文的解决方法。"></a>既然Repository已经创建了，当然是先把博客放到Github上去看看效果。编辑D：\hexo下的_config.yml文件。在_config.yml最下方，添加如下配置(命令中的第一个Yveda为Github的用户名,第二Yveda为之前New的Repository的名字,记得改成自己的。另外记得一点，hexo的配置文件中任何’:’后面都是带一个空格的),如果配置以下命令出现ERROR Deployer not found : github，则参考上文的解决方法。</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy: </span><br><span class="line">  type: git</span><br><span class="line">  repository: http://github.com/Yveda/Yvead.github.io.git</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure><h5 id="配置好-config-yml并保存后，执行以下命令部署到Github上。如果你是第一次使用Github或者是已经使用过，但没有配置过SSH，则可能需要配置一下，本文的另一种发布到github的配置一节有介绍。"><a href="#配置好-config-yml并保存后，执行以下命令部署到Github上。如果你是第一次使用Github或者是已经使用过，但没有配置过SSH，则可能需要配置一下，本文的另一种发布到github的配置一节有介绍。" class="headerlink" title="配置好_config.yml并保存后，执行以下命令部署到Github上。如果你是第一次使用Github或者是已经使用过，但没有配置过SSH，则可能需要配置一下，本文的另一种发布到github的配置一节有介绍。"></a>配置好_config.yml并保存后，执行以下命令部署到Github上。如果你是第一次使用Github或者是已经使用过，但没有配置过SSH，则可能需要配置一下，本文的另一种发布到github的配置一节有介绍。</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ hexo g</span><br><span class="line">$ hexo d</span><br></pre></td></tr></table></figure><h5 id="执行上面的第二个命令，可能会要你输入用户名和密码，皆为注册Github时的数据，输入密码是不显示任何东西的，输入完毕回车即可。"><a href="#执行上面的第二个命令，可能会要你输入用户名和密码，皆为注册Github时的数据，输入密码是不显示任何东西的，输入完毕回车即可。" class="headerlink" title="执行上面的第二个命令，可能会要你输入用户名和密码，皆为注册Github时的数据，输入密码是不显示任何东西的，输入完毕回车即可。"></a>执行上面的第二个命令，可能会要你输入用户名和密码，皆为注册Github时的数据，输入密码是不显示任何东西的，输入完毕回车即可。</h5><h5 id="此时，我们的博客已经搭建起来，并发布到Github上了，这时可以登陆自己的Github查看代码是否已经推送到对应Repository，在浏览器访问Yveda-github-io就能看到自己的博客了。第一次访问地址，可能访问不了，您可以在几分钟后进行访问，一般不超过10分钟。"><a href="#此时，我们的博客已经搭建起来，并发布到Github上了，这时可以登陆自己的Github查看代码是否已经推送到对应Repository，在浏览器访问Yveda-github-io就能看到自己的博客了。第一次访问地址，可能访问不了，您可以在几分钟后进行访问，一般不超过10分钟。" class="headerlink" title="此时，我们的博客已经搭建起来，并发布到Github上了，这时可以登陆自己的Github查看代码是否已经推送到对应Repository，在浏览器访问Yveda.github.io就能看到自己的博客了。第一次访问地址，可能访问不了，您可以在几分钟后进行访问，一般不超过10分钟。"></a>此时，我们的博客已经搭建起来，并发布到Github上了，这时可以登陆自己的Github查看代码是否已经推送到对应Repository，在浏览器访问Yveda.github.io就能看到自己的博客了。第一次访问地址，可能访问不了，您可以在几分钟后进行访问，一般不超过10分钟。</h5><h3 id="hexo的配置文件"><a href="#hexo的配置文件" class="headerlink" title="hexo的配置文件"></a>hexo的配置文件</h3><h5 id="hexo里面有两个常用到的配置文件，分别是整个博客的配置文件D-HEXO-config-yml和主题的配置文件D-HEXO-themes-light-config-yml，此地址是对于我来说，hexo3-0使用的默认主题是landscape，因此你们的地址应该是D-HEXO-themes-landscape-config-yml，下文所有讲到light的地方，你们将之换为自己的主题名即可。本博客使用的主题是基于light改善的主题，目前还在完善中，如果完成的比较好，以后可能发布在github上。如果你想自己挑选喜欢的主题，hexo官方提供了12个主题供你自己选择，使用方法很简单，点击自己想要的主题，进入该主题的Repository，使用Git将主题clone到本地，然后将整个文件夹复制到D-HEXO-themes文件夹下，将D-HEXO-config-yml里的theme名字改为自己下载的主题的文件夹名即可。"><a href="#hexo里面有两个常用到的配置文件，分别是整个博客的配置文件D-HEXO-config-yml和主题的配置文件D-HEXO-themes-light-config-yml，此地址是对于我来说，hexo3-0使用的默认主题是landscape，因此你们的地址应该是D-HEXO-themes-landscape-config-yml，下文所有讲到light的地方，你们将之换为自己的主题名即可。本博客使用的主题是基于light改善的主题，目前还在完善中，如果完成的比较好，以后可能发布在github上。如果你想自己挑选喜欢的主题，hexo官方提供了12个主题供你自己选择，使用方法很简单，点击自己想要的主题，进入该主题的Repository，使用Git将主题clone到本地，然后将整个文件夹复制到D-HEXO-themes文件夹下，将D-HEXO-config-yml里的theme名字改为自己下载的主题的文件夹名即可。" class="headerlink" title="hexo里面有两个常用到的配置文件，分别是整个博客的配置文件D:\HEXO_config.yml和主题的配置文件D:\HEXO\themes\light_config.yml，此地址是对于我来说，hexo3.0使用的默认主题是landscape，因此你们的地址应该是D:\HEXO\themes\landscape_config.yml，下文所有讲到light的地方，你们将之换为自己的主题名即可。本博客使用的主题是基于light改善的主题，目前还在完善中，如果完成的比较好，以后可能发布在github上。如果你想自己挑选喜欢的主题，hexo官方提供了12个主题供你自己选择，使用方法很简单，点击自己想要的主题，进入该主题的Repository，使用Git将主题clone到本地，然后将整个文件夹复制到D:\HEXO\themes文件夹下，将D:\HEXO_config.yml里的theme名字改为自己下载的主题的文件夹名即可。"></a>hexo里面有两个常用到的配置文件，分别是整个博客的配置文件D:\HEXO_config.yml和主题的配置文件D:\HEXO\themes\light_config.yml，此地址是对于我来说，hexo3.0使用的默认主题是landscape，因此你们的地址应该是D:\HEXO\themes\landscape_config.yml，下文所有讲到light的地方，你们将之换为自己的主题名即可。本博客使用的主题是基于light改善的主题，目前还在完善中，如果完成的比较好，以后可能发布在github上。如果你想自己挑选喜欢的主题，hexo官方提供了12个主题供你自己选择，使用方法很简单，点击自己想要的主题，进入该主题的Repository，使用Git将主题clone到本地，然后将整个文件夹复制到D:\HEXO\themes文件夹下，将D:\HEXO_config.yml里的theme名字改为自己下载的主题的文件夹名即可。</h5><h3 id="Hexo配置文件详细说明"><a href="#Hexo配置文件详细说明" class="headerlink" title="Hexo配置文件详细说明"></a>Hexo配置文件详细说明</h3><h5 id="D-HEXO-config-yml"><a href="#D-HEXO-config-yml" class="headerlink" title="D:\HEXO_config.yml"></a>D:\HEXO_config.yml</h5><h4 id="网站"><a href="#网站" class="headerlink" title="网站"></a>网站</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">参数              描述</span><br><span class="line">title           网站标题</span><br><span class="line">subtitle        网站副标题</span><br><span class="line">description     网站描述</span><br><span class="line">author          您的名字</span><br><span class="line">language        网站使用的语言</span><br><span class="line">timezone        网站时区。Hexo 默认使用您电脑的时区。时区列表。比如说：America/New_York, Japan, 和 UTC 。</span><br></pre></td></tr></table></figure><h5 id="其中，description主要用于SEO，告诉搜索引擎一个关于您站点的简单描述，通常建议在其中包含您网站的关键词。author参数用于主题显示文章的作者。"><a href="#其中，description主要用于SEO，告诉搜索引擎一个关于您站点的简单描述，通常建议在其中包含您网站的关键词。author参数用于主题显示文章的作者。" class="headerlink" title="其中，description主要用于SEO，告诉搜索引擎一个关于您站点的简单描述，通常建议在其中包含您网站的关键词。author参数用于主题显示文章的作者。"></a>其中，description主要用于SEO，告诉搜索引擎一个关于您站点的简单描述，通常建议在其中包含您网站的关键词。author参数用于主题显示文章的作者。</h5><h4 id="网址"><a href="#网址" class="headerlink" title="网址"></a>网址</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">参数                 描述                       默认值</span><br><span class="line">url                  网址     </span><br><span class="line">root               网站根目录    </span><br><span class="line">permalink         文章的永久链接格式      :year/:month/:day/:title/</span><br><span class="line">permalink_defaults  永久链接中各部分的默认值</span><br></pre></td></tr></table></figure><h4 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">参数                 描述   </span><br><span class="line">source_dir       资源文件夹，这个文件夹用来存放内容。     </span><br><span class="line">public_dir       公共文件夹，这个文件夹用于存放生成的站点文件。 </span><br><span class="line">tag_dir          标签文件夹  </span><br><span class="line">archive_dir      归档文件夹，按年份</span><br><span class="line">category_dir     分类文件夹，按标签</span><br><span class="line">code_dir         Include code 文件夹   </span><br><span class="line">i18n_dir         国际化（i18n）文件夹   </span><br><span class="line">skip_render      跳过指定文件的渲染，您可使用 glob 表达式来匹配路径。</span><br></pre></td></tr></table></figure><h4 id="文章"><a href="#文章" class="headerlink" title="文章"></a>文章</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">参数                  描述  </span><br><span class="line">new_post_name       新文章的文件名称    </span><br><span class="line">default_layout      预设布局    </span><br><span class="line">auto_spacing        在中文和英文之间加入空格    </span><br><span class="line">titlecase           把标题转换为 title case   </span><br><span class="line">external_link       在新标签中打开链接 </span><br><span class="line">filename_case       把文件名称转换为 (1) 小写或 (2) 大写     </span><br><span class="line">render_drafts       显示草稿    </span><br><span class="line">post_asset_folder   启动 Asset 文件夹    </span><br><span class="line">relative_link       把链接改为与根目录的相对位址  </span><br><span class="line">future              显示未来的文章     </span><br><span class="line">highlight           代码块的设置</span><br></pre></td></tr></table></figure><h4 id="分类-amp-标签"><a href="#分类-amp-标签" class="headerlink" title="分类&amp;标签"></a>分类&amp;标签</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">参数                  描述          默认值</span><br><span class="line">default_category    默认分类    uncategorized</span><br><span class="line">category_map        分类别名    </span><br><span class="line">tag_map             标签别名</span><br></pre></td></tr></table></figure><h4 id="时间-日期格式"><a href="#时间-日期格式" class="headerlink" title="时间/日期格式"></a>时间/日期格式</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">时间/日期格式</span><br></pre></td></tr></table></figure><h4 id="分页"><a href="#分页" class="headerlink" title="分页"></a>分页</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">参数          描述                              默认值</span><br><span class="line">per_page    每页显示的文章量 (0 = 关闭分页功能)   10</span><br><span class="line">pagination_dir  分页目录                        page</span><br></pre></td></tr></table></figure><h4 id="扩展"><a href="#扩展" class="headerlink" title="扩展"></a>扩展</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">参数          描述</span><br><span class="line">theme       当前主题名称。值为false时禁用主题</span><br><span class="line">deploy      部署部分的设置</span><br></pre></td></tr></table></figure><h5 id="按照自己的意愿修改完后，执行hexo-g，hexo-s，打开localhost-4000看看效果。"><a href="#按照自己的意愿修改完后，执行hexo-g，hexo-s，打开localhost-4000看看效果。" class="headerlink" title="按照自己的意愿修改完后，执行hexo g，hexo s，打开localhost:4000看看效果。"></a>按照自己的意愿修改完后，执行hexo g，hexo s，打开localhost:4000看看效果。</h5><h3 id="发表一篇文章"><a href="#发表一篇文章" class="headerlink" title="发表一篇文章"></a>发表一篇文章</h3><h5 id="1-在Git-Bash执行命令：-hexo-new-“my-new-post”"><a href="#1-在Git-Bash执行命令：-hexo-new-“my-new-post”" class="headerlink" title="1.在Git Bash执行命令：$ hexo new “my new post”"></a>1.在Git Bash执行命令：$ hexo new “my new post”</h5><h5 id="2-在D-HEXO-source-post中打开my-new-post-md，打开方式使用记事本或subline-vscode。"><a href="#2-在D-HEXO-source-post中打开my-new-post-md，打开方式使用记事本或subline-vscode。" class="headerlink" title="2.在D:\HEXO\source_post中打开my-new-post.md，打开方式使用记事本或subline vscode。"></a>2.在D:\HEXO\source_post中打开my-new-post.md，打开方式使用记事本或subline vscode。</h5><h5 id="hexo中写文章使用的是Markdown，没接触过的可以看下Markdown语法说明-一分钟学会Markdown"><a href="#hexo中写文章使用的是Markdown，没接触过的可以看下Markdown语法说明-一分钟学会Markdown" class="headerlink" title="hexo中写文章使用的是Markdown，没接触过的可以看下Markdown语法说明,一分钟学会Markdown"></a>hexo中写文章使用的是Markdown，没接触过的可以看下<a href="https://note.youdao.com/" target="_blank" rel="noopener">Markdown语法说明</a>,<a href="https://note.youdao.com/" target="_blank" rel="noopener">一分钟学会Markdown</a></h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">title: my new post #可以改成中文的，如“新文章”</span><br><span class="line">date: 2015-04-08 22:56:29 #发表日期，一般不改动</span><br><span class="line">categories: blog #文章文类</span><br><span class="line">tags: [博客，文章] #文章标签，多于一项时用这种格式，只有一项时使用tags: blog</span><br><span class="line">---</span><br><span class="line">#这里是正文，用markdown写，你可以选择写一段显示在首页的简介后，加上</span><br><span class="line">&lt;!--more--&gt;#在&lt;!--more--&gt;之前的内容会显示在首页，之后的内容会被隐藏，当游客点击Read more才能看到。</span><br></pre></td></tr></table></figure><h5 id="写完文章后，你可以使用"><a href="#写完文章后，你可以使用" class="headerlink" title="写完文章后，你可以使用"></a>写完文章后，你可以使用</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1.$ hexo g生成静态文件。</span><br><span class="line">2.$ hexo s在本地预览效果。</span><br><span class="line">3.hexo d同步到github，然后使用http://Yveda.github.io进行访问。</span><br></pre></td></tr></table></figure><h3 id="删除一篇文章"><a href="#删除一篇文章" class="headerlink" title="删除一篇文章"></a>删除一篇文章</h3><h5 id="在D-HEXO-source-post-删除想要删除的文件，然后再执行hexo-g-hexo-d"><a href="#在D-HEXO-source-post-删除想要删除的文件，然后再执行hexo-g-hexo-d" class="headerlink" title="在D:\HEXO\source_post 删除想要删除的文件，然后再执行hexo g,hexo d"></a>在D:\HEXO\source_post 删除想要删除的文件，然后再执行hexo g,hexo d</h5><h3 id="清除缓存"><a href="#清除缓存" class="headerlink" title="清除缓存"></a>清除缓存</h3><h5 id="清除缓存文件db-json和已生成的静态文件public。在某些情况（尤其是更换主题后），如果发现您对站点的更改无论如何也不生效，您可能需要运行该命令。"><a href="#清除缓存文件db-json和已生成的静态文件public。在某些情况（尤其是更换主题后），如果发现您对站点的更改无论如何也不生效，您可能需要运行该命令。" class="headerlink" title="清除缓存文件db.json和已生成的静态文件public。在某些情况（尤其是更换主题后），如果发现您对站点的更改无论如何也不生效，您可能需要运行该命令。"></a>清除缓存文件db.json和已生成的静态文件public。在某些情况（尤其是更换主题后），如果发现您对站点的更改无论如何也不生效，您可能需要运行该命令。</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo clean</span><br></pre></td></tr></table></figure><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><h5 id="第一次使用的主题是black-blue，动漫主题，感觉很酷，但是还想换个更酷炫的gal"><a href="#第一次使用的主题是black-blue，动漫主题，感觉很酷，但是还想换个更酷炫的gal" class="headerlink" title="第一次使用的主题是black-blue，动漫主题，感觉很酷，但是还想换个更酷炫的gal"></a>第一次使用的主题是black-blue，动漫主题，感觉很酷，但是还想换个更酷炫的gal</h5><hr>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;搭建一个博客感觉很酷很炫，本着这个心理我就想创建一个个人博客。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;hexo官网：https://hexo.io/zh-cn/&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="hexo" scheme="https://yveda.github.io/categories/hexo/"/>
    
    
      <category term="hexo-config" scheme="https://yveda.github.io/tags/hexo-config/"/>
    
  </entry>
  
</feed>
