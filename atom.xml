<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Yveda.blog</title>
  
  <subtitle>业精于勤荒于嬉</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://yveda.github.io/"/>
  <updated>2018-06-16T09:09:40.256Z</updated>
  <id>https://yveda.github.io/</id>
  
  <author>
    <name>Yveda</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>5月份总结</title>
    <link href="https://yveda.github.io/2018/05/31/20180531/"/>
    <id>https://yveda.github.io/2018/05/31/20180531/</id>
    <published>2018-05-31T14:56:29.000Z</published>
    <updated>2018-06-16T09:09:40.256Z</updated>
    
    <content type="html"><![CDATA[<h3 id="感想"><a href="#感想" class="headerlink" title="感想"></a>感想</h3><blockquote><ul><li>5月第二个礼拜答辩，没想到导师问得很水，随便就过了<a id="more"></a></li><li>接下来就是坑爹的开始，苛刻的论文修改规范，让多少学子曝晒在烈日下[无语]，不是在打印店就是在打印店的路上</li><li>五月中旬来到东方夏威夷之称的“鹭岛”厦门，熙熙攘攘的过往人群，到处是东色建筑特色的购物街与西方特写写字楼，天空湛蓝无比…..</li><li>月末这个礼拜就是投简历找工作，四处奔波</li></ul></blockquote><h3 id="展望"><a href="#展望" class="headerlink" title="展望"></a>展望</h3><blockquote><ul><li>期待找到一家自己满意的公司，好好发展当下</li><li>七分工作，两分生活，一分感悟</li><li>调整心态适应社会</li></ul></blockquote><script>if("123"==prompt("请输入密码")){alert("正确");}else{alert("错误");location="https://yveda.github.io/"; }</script><hr>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;感想&quot;&gt;&lt;a href=&quot;#感想&quot; class=&quot;headerlink&quot; title=&quot;感想&quot;&gt;&lt;/a&gt;感想&lt;/h3&gt;&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;5月第二个礼拜答辩，没想到导师问得很水，随便就过了
    
    </summary>
    
      <category term="总结" scheme="https://yveda.github.io/categories/%E6%80%BB%E7%BB%93/"/>
    
    
      <category term="月度总结" scheme="https://yveda.github.io/tags/%E6%9C%88%E5%BA%A6%E6%80%BB%E7%BB%93/"/>
    
  </entry>
  
  <entry>
    <title>4月份总结</title>
    <link href="https://yveda.github.io/2018/04/28/20180430/"/>
    <id>https://yveda.github.io/2018/04/28/20180430/</id>
    <published>2018-04-28T13:51:29.000Z</published>
    <updated>2018-06-08T03:34:42.015Z</updated>
    
    <content type="html"><![CDATA[<h3 id="感想"><a href="#感想" class="headerlink" title="感想"></a>感想</h3><blockquote><ul><li>快毕业了意味着也快要找工作了，感慨万千。多学点东西，多点出路。<a id="more"></a></li><li>完成了一个毕业设计《基于vue框架的web音乐app的设计与实现》</li><li>4月9号 遇到了小幸运</li><li>加深node.js和vue的掌握</li></ul></blockquote><h3 id="展望"><a href="#展望" class="headerlink" title="展望"></a>展望</h3><blockquote><ul><li>完善音乐移动端app</li><li>Vue+Node+MongoDB项目</li><li><a href="http://study.163.com/course/introduction.htm?courseId=1003797015#/courseDetail?tab=1" target="_blank" rel="noopener">Vue TODO List</a></li><li>完善个人博客+腾讯云</li></ul></blockquote><hr>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;感想&quot;&gt;&lt;a href=&quot;#感想&quot; class=&quot;headerlink&quot; title=&quot;感想&quot;&gt;&lt;/a&gt;感想&lt;/h3&gt;&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;快毕业了意味着也快要找工作了，感慨万千。多学点东西，多点出路。
    
    </summary>
    
      <category term="总结" scheme="https://yveda.github.io/categories/%E6%80%BB%E7%BB%93/"/>
    
    
      <category term="月度总结" scheme="https://yveda.github.io/tags/%E6%9C%88%E5%BA%A6%E6%80%BB%E7%BB%93/"/>
    
  </entry>
  
  <entry>
    <title>用阿里云进行网站线上部署</title>
    <link href="https://yveda.github.io/2018/01/15/%E7%BD%91%E7%AB%99%E4%B8%8A%E7%BA%BF%E6%B5%81%E7%A8%8B/"/>
    <id>https://yveda.github.io/2018/01/15/网站上线流程/</id>
    <published>2018-01-15T07:17:58.000Z</published>
    <updated>2018-06-13T11:56:32.937Z</updated>
    
    <content type="html"><![CDATA[<p>需要基础：</p><ul><li>1、有linux基础。</li><li>2、对后台web开发有一定的了解。</li><li>3、熟悉Nginx。<a id="more"></a></li></ul><p>学到什么：</p><ul><li>1、通过阿里云购买服务，并配置。</li><li>2、实现把自己准备好的项目，发布到公网，让大家都能访问。</li></ul><p><img src="http://p9zhlsorz.bkt.clouddn.com/18-6-12/93070241.jpg" alt=""></p><p>生产环境中推荐使用linux，因为他会比windos更加稳定出色</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://p9zhlsorz.bkt.clouddn.com/18-6-12/93388163.jpg" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><h2 id="购买服务器"><a href="#购买服务器" class="headerlink" title="购买服务器"></a>购买服务器</h2><p>选择入门级来构建博客绰绰有余</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://p9zhlsorz.bkt.clouddn.com/18-6-12/85857310.jpg" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>往下拉，随便点进下面一个<br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://p9zhlsorz.bkt.clouddn.com/18-6-12/26412084.jpg" alt="" title="">                </div>                <div class="image-caption"></div>            </figure></p><h3 id="基础配置"><a href="#基础配置" class="headerlink" title="基础配置"></a>基础配置</h3><p>选择一款需要的服务器：2核cpu，2GB内存</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://p9zhlsorz.bkt.clouddn.com/18-6-12/2561741.jpg" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>然后往下拉，最重要的地方来了-镜像（指操作系统）</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://p9zhlsorz.bkt.clouddn.com/18-6-12/61643520.jpg" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>选择linux的CentOS版本</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://p9zhlsorz.bkt.clouddn.com/18-6-12/59281895.jpg" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>版本建议7.0以上版本</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://p9zhlsorz.bkt.clouddn.com/18-6-12/22654187.jpg" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>再往下是存储，分为<code>系统盘</code>和<code>数据盘</code>，如果觉得数据很多，需要存个数据库，那么可以增加一个数据盘</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://p9zhlsorz.bkt.clouddn.com/18-6-12/74024045.jpg" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>如果没有那么大的需求，我们只是希望系统盘能大一点，高效云盘选择140G，者样初期配置完成，接着点击下一步<code>网络和安全组</code></p><h3 id="网络和安全组"><a href="#网络和安全组" class="headerlink" title="网络和安全组"></a>网络和安全组</h3><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://p9zhlsorz.bkt.clouddn.com/18-6-12/683846.jpg" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>上面的<code>网络</code>和<code>公网带宽</code>先不用管，最重要先看<code>安全组</code></p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://p9zhlsorz.bkt.clouddn.com/18-6-12/2894429.jpg" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>安全组默认有几个端口，80端口默认是要打开的，还有默认的两个，80是http网站的默认端口，并且是隐式存在的，不需要显式的写出来，如果是其他的端口就要把它显式的写出来，接着下一步</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://p9zhlsorz.bkt.clouddn.com/18-6-12/60890461.jpg" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><h3 id="系统配置"><a href="#系统配置" class="headerlink" title="系统配置"></a>系统配置</h3><p>这里面最重要的就是配置密码，密钥对对新手来说有些麻烦，所以选择较为简单的密码，密码建议设置复杂一点</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://p9zhlsorz.bkt.clouddn.com/18-6-12/76913933.jpg" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>描述可以随便填写，主机名可以设置为blog，这些设置完了之后其实大部分已经配置完了</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://p9zhlsorz.bkt.clouddn.com/18-6-12/12495136.jpg" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><h3 id="分组设置"><a href="#分组设置" class="headerlink" title="分组设置"></a>分组设置</h3><p>影响很小，可以添加标签，比方说用于测试，开发，服务</p><p>然后就可以点击确认订单了，这样服务器购买就基本上完成了</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://p9zhlsorz.bkt.clouddn.com/18-6-12/33572240.jpg" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><h3 id="确认订单"><a href="#确认订单" class="headerlink" title="确认订单"></a>确认订单</h3><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://p9zhlsorz.bkt.clouddn.com/18-6-12/75486357.jpg" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>往下拉，选择时间和确认服务，然后点击购买进入购买页面，完了之后点击左上角的<code>管理控制台</code></p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://p9zhlsorz.bkt.clouddn.com/18-6-12/81231087.jpg" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><h3 id="管理控制台"><a href="#管理控制台" class="headerlink" title="管理控制台"></a>管理控制台</h3><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://p9zhlsorz.bkt.clouddn.com/18-6-12/51181202.jpg" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>点击进入刚才购买的<code>云服务器</code>,里面有服务器的情况配置和资源整合，后期的ip配置，密码更改都可以在这个地方看到</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://p9zhlsorz.bkt.clouddn.com/18-6-12/8354354.jpg" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><h2 id="连接到服务器"><a href="#连接到服务器" class="headerlink" title="连接到服务器"></a>连接到服务器</h2><p>这个工具集成了linux的很强大的命令行工具，包括连接，上传….</p><p>ip在买完后个人控制中心看到ip地址</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://p9zhlsorz.bkt.clouddn.com/18-6-12/60279040.jpg" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://p9zhlsorz.bkt.clouddn.com/18-6-12/10635497.jpg" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>输入ssh <a href="mailto:root@47.94.255.230" target="_blank" rel="noopener">root@47.94.255.230</a>，这里虽然没有显示但是已经输入了，然后可以看到机器；通过uname -a查看一下版本</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://p9zhlsorz.bkt.clouddn.com/18-6-12/41258348.jpg" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><h2 id="web服务器选择"><a href="#web服务器选择" class="headerlink" title="web服务器选择"></a>web服务器选择</h2><h3 id="推荐三款"><a href="#推荐三款" class="headerlink" title="推荐三款"></a>推荐三款</h3><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://p9zhlsorz.bkt.clouddn.com/18-6-12/19266347.jpg" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><h3 id="如何安装？"><a href="#如何安装？" class="headerlink" title="如何安装？"></a>如何安装？</h3><p>输入nginx.org来到官网，左边是他的新闻和日志</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://p9zhlsorz.bkt.clouddn.com/18-6-12/77458283.jpg" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>看下右下角的download，点进来，里面有很多版本</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://p9zhlsorz.bkt.clouddn.com/18-6-12/79408794.jpg" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>选择linux的stable version，点进去，里面会说明如何安装</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://p9zhlsorz.bkt.clouddn.com/18-6-12/39907219.jpg" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><h4 id="推荐安装方法"><a href="#推荐安装方法" class="headerlink" title="推荐安装方法"></a>推荐安装方法</h4><p>在CentOS下安装，安装前线确认下NGINX是否存在，<code>nginx -v</code>是查看版本的指令,下面可以看到版本，编译东西，依赖，配置参数，看到这些说明机器已经安装了</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://p9zhlsorz.bkt.clouddn.com/18-6-12/58882478.jpg" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>如果没安装会出现什么样的提示？我么可以故意输入nginxs -v,下面说明机器没有安装nginx</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://p9zhlsorz.bkt.clouddn.com/18-6-12/94964213.jpg" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><h4 id="下面准备一个全新的CentOS系统"><a href="#下面准备一个全新的CentOS系统" class="headerlink" title="下面准备一个全新的CentOS系统"></a>下面准备一个全新的CentOS系统</h4><p>跟上面讲的是一模一样的，唯一的区别是这台全新的系统里面什么都没有装</p><p>查看nginx显示无，然后进行yum install<br>nginx它去加载库，然后它告诉说没有这个包</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://p9zhlsorz.bkt.clouddn.com/18-6-12/66251680.jpg" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>nginx不在官方的CentOS官方软件园下面，就是说CentOS自带是没有nginx这个东西的，nginx在epel下面存在，所以说破现在来安装他</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://p9zhlsorz.bkt.clouddn.com/18-6-12/64120826.jpg" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>看到安装一个包，总大小什么什么的</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://p9zhlsorz.bkt.clouddn.com/18-6-12/37781356.jpg" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>选择y，代表yes，最后告诉我们安装好了一个epel-release</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://p9zhlsorz.bkt.clouddn.com/18-6-12/2651078.jpg" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>然后再安装ngnix，下载速度根据网络速度</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://p9zhlsorz.bkt.clouddn.com/18-6-12/7535552.jpg" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>它告诉我们安装了一个包，里面有七个依赖</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://p9zhlsorz.bkt.clouddn.com/18-6-12/7535552.jpg" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>然后再选择y，他就开始帮我们安装</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://p9zhlsorz.bkt.clouddn.com/18-6-12/66136024.jpg" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>这时候再查看下nginx -v ，可以看到已经安装好了</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://p9zhlsorz.bkt.clouddn.com/18-6-12/53243164.jpg" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><h2 id="配置web服务器"><a href="#配置web服务器" class="headerlink" title="配置web服务器"></a>配置web服务器</h2><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://p9zhlsorz.bkt.clouddn.com/18-6-12/87884341.jpg" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>还是用git bash来连接到服务器，web服务器基本上是配置文件来使用的</p><h3 id="首先找到配置文件"><a href="#首先找到配置文件" class="headerlink" title="首先找到配置文件"></a>首先找到配置文件</h3><p>配置文件在CentOS下面，可以看到他有个nginx.conf的文件，我们要对他进行修改</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://p9zhlsorz.bkt.clouddn.com/18-6-12/65990059.jpg" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><h4 id="如果找不到配置文件"><a href="#如果找不到配置文件" class="headerlink" title="如果找不到配置文件"></a>如果找不到配置文件</h4><p>nginx提供了一个语法检查的一个命令 nginx -t,这样就可以找到配置文件地址</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://p9zhlsorz.bkt.clouddn.com/18-6-12/44335486.jpg" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><h3 id="安装vim"><a href="#安装vim" class="headerlink" title="安装vim"></a>安装vim</h3><p>yum install vim，安装过了就不需要</p><h3 id="然后打开nginx-conf"><a href="#然后打开nginx-conf" class="headerlink" title="然后打开nginx.conf"></a>然后打开nginx.conf</h3><p>输入vim nginx.conf，可以看到已经将user nginx改为了user root</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://p9zhlsorz.bkt.clouddn.com/18-6-12/12866453.jpg" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>然后看下http&gt;server&gt;location</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://p9zhlsorz.bkt.clouddn.com/18-6-12/74638064.jpg" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>简单说下vim的基本使用：</p><p>首先刚进来的时候他是只读模式，可以通过按住shift和冒号出现左下角这么一个标志</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://p9zhlsorz.bkt.clouddn.com/18-6-12/74638064.jpg" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>这个时候输入一个指令<code>set nu</code> ，他出现一个行号,这是制图模式</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://p9zhlsorz.bkt.clouddn.com/18-6-12/64266085.jpg" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>摁下键盘了里面的i字母，改成insert模式，可以看到做下角变成insert</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://p9zhlsorz.bkt.clouddn.com/18-6-12/21756881.jpg" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>这个时候就可以对他进行编辑了（location里面abc删掉）</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://p9zhlsorz.bkt.clouddn.com/18-6-12/68991873.jpg" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://p9zhlsorz.bkt.clouddn.com/18-6-12/6700773.jpg" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>改完之后怎么保存，摁下esc，insert就没有了，然后还是刚才的<code>shift+：</code>,然后使用<code>wq</code>:w是保存，q是退出</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://p9zhlsorz.bkt.clouddn.com/18-6-12/35938508.jpg" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>然后点击回车，就退回到下面这个界面</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://p9zhlsorz.bkt.clouddn.com/18-6-12/2478310.jpg" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><h3 id="再进入nginx-conf"><a href="#再进入nginx-conf" class="headerlink" title="再进入nginx.conf"></a>再进入nginx.conf</h3><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://p9zhlsorz.bkt.clouddn.com/18-6-12/89475377.jpg" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>localtion里面有个<code>根</code>是什么？打开浏览器假设0.0.0.1是ip，根就是默认使用ip去访问网站，如果刚才是/abc,要在0.0.0.1/abc才可以访问到网站，这是个区别</p><p>root代表网站路径，就是存放网站的地方，这里是/root/www/</p><p>index就是默认输入ip以后他会帮我们显示那个网站，因为网站默认都是index，比方说我的网站就是跟别人不一样，叫main.html，这个时候需要对他进行一个配置，就是他会帮你去找main.html这个文件夹</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://p9zhlsorz.bkt.clouddn.com/18-6-12/26732409.jpg" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>++如果说这边是index.html要怎么去访问？++<br>需要用0.0.0.1/index.html去访问</p><p>如果没有任何修改，则直接摁q就可以了。</p><p>建立下面这么一个文件夹</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://p9zhlsorz.bkt.clouddn.com/18-6-12/71776217.jpg" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><h2 id="上传网站到服务器"><a href="#上传网站到服务器" class="headerlink" title="上传网站到服务器"></a>上传网站到服务器</h2><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://p9zhlsorz.bkt.clouddn.com/18-6-12/15781030.jpg" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>配置的话需要用到git bash</p><p>先进行<code>scp</code>命令，发现是有的啊</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://p9zhlsorz.bkt.clouddn.com/18-6-12/15781030.jpg" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>然后连接到远程服务器，看下远程服务器是否有这个东西，然后输入scp,也可以看到他是有的</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://p9zhlsorz.bkt.clouddn.com/18-6-12/4202062.jpg" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>如果没有scp的话，则进行安装：yum install openssh-client(这个openssh-client提供了一个scp的工具)</p><p>输入<code>logout</code> 退出服务器</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://p9zhlsorz.bkt.clouddn.com/18-6-12/61931974.jpg" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>./代表当前路径，*代表所有，上传到远程ip上的一个路径，回车输入密码，下面为上传的资源文件</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://p9zhlsorz.bkt.clouddn.com/18-6-12/72112771.jpg" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>这个时候再远程接入服务器</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://p9zhlsorz.bkt.clouddn.com/18-6-12/95317838.jpg" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>进来以后看下，cd进入文件夹root下面的www，并通过ls命令查看查看当前目录下，可以看到文件已经上传上来了</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://p9zhlsorz.bkt.clouddn.com/18-6-12/68901184.jpg" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>然后看下nginx服务，使用ps -ef | grep nginx,以下可以看到nginx正在启动</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://p9zhlsorz.bkt.clouddn.com/18-6-12/19343900.jpg" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>如何停止nginx呢？输入nginx -s stop即可停止</p><p>还有一个问题就是nginx启动不了，失败，这个时可能是配置的原因，可以使用nginx -t查看一下 ，如果这里告诉你语法ok，那么就ok了</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://p9zhlsorz.bkt.clouddn.com/18-6-12/21135815.jpg" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>cat是查看</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://p9zhlsorz.bkt.clouddn.com/18-6-12/63395166.jpg" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>得到如下</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://p9zhlsorz.bkt.clouddn.com/18-6-12/72893282.jpg" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>那我现在是不是可以通过ip来访问网站呢，输入logout看下记录</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://p9zhlsorz.bkt.clouddn.com/18-6-12/1458819.jpg" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://p9zhlsorz.bkt.clouddn.com/18-6-12/64503786.jpg" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>看下服务，我们服务是没有启动的，所以这时候网站无法访问</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://p9zhlsorz.bkt.clouddn.com/18-6-12/39690899.jpg" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>这时候直接使用 nginx -relaod（重新加载），我们可以查出没有，没有找到这个地址</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://p9zhlsorz.bkt.clouddn.com/18-6-12/17204424.jpg" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>这个时候使nginx去启动</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://p9zhlsorz.bkt.clouddn.com/18-6-12/61439000.jpg" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>这个时候再去刷新一下网站，可以看到一个网站已经可以通过公用ip的方式去访问了，那么这个访问难免有有一些麻烦，因为记录一个ip是比较难的，相比记录一个域名的话</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://p9zhlsorz.bkt.clouddn.com/18-6-12/84369466.jpg" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><h2 id="域名购买以及解析"><a href="#域名购买以及解析" class="headerlink" title="域名购买以及解析"></a>域名购买以及解析</h2><h3 id="域名购买"><a href="#域名购买" class="headerlink" title="域名购买"></a>域名购买</h3><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://p9zhlsorz.bkt.clouddn.com/18-6-13/26915546.jpg" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://p9zhlsorz.bkt.clouddn.com/18-6-13/9249317.jpg" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>然后就可以进行支付了</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://p9zhlsorz.bkt.clouddn.com/18-6-13/14333216.jpg" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><h3 id="域名映射"><a href="#域名映射" class="headerlink" title="域名映射"></a>域名映射</h3><p>打开右上角的控制台</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://p9zhlsorz.bkt.clouddn.com/18-6-13/42984257.jpg" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>控制台——&gt;域名与网站——&gt;域名——&gt;进入域名列表</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://p9zhlsorz.bkt.clouddn.com/18-6-13/48622285.jpg" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>点击解析</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://p9zhlsorz.bkt.clouddn.com/18-6-13/62531161.jpg" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>进入下面页面，这里哟个新手引导</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://p9zhlsorz.bkt.clouddn.com/18-6-13/52503823.jpg" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>www跟@的区别：www就是平常输入的hhtp:<a href="http://www.baidu.com，@就是输入baidu.com也能访问百度，这个@就是属于www的一个隐式的存在" target="_blank" rel="noopener">www.baidu.com，@就是输入baidu.com也能访问百度，这个@就是属于www的一个隐式的存在</a></p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://p9zhlsorz.bkt.clouddn.com/18-6-13/44936912.jpg" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>记录值，也就是ip地址，这个时候点击确认就解析成功了。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://p9zhlsorz.bkt.clouddn.com/18-6-13/82423279.jpg" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>别忘了进行备案</p><h2 id="结合http协议"><a href="#结合http协议" class="headerlink" title="结合http协议"></a>结合http协议</h2><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://p9zhlsorz.bkt.clouddn.com/18-6-13/31893841.jpg" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>当我们访问一个网站，浏览器回去巡展.com根服务器，找域名对应的服务器地址，也就是公用的ip地址，然后他再去找域名服务商，找到后匹配，进行第一次握手，我们服务器上面架设一台web服务器，web服务器就是向外界提供web服务的软件，这个时候就会去请求web服务器，比如说请求一个文档，首先浏览器发出一个request，然后这个web服务器（也就是nginx），发出一个response，这个就是一个握手，这个时候我们就拿到了文档资源，这个时候浏览器通过浏览器内核根据资源文件，文档数据去渲染页面，到最后就是下面看到的这个界面</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://p9zhlsorz.bkt.clouddn.com/18-6-13/40031260.jpg" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://p9zhlsorz.bkt.clouddn.com/18-6-13/89478892.jpg" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><hr>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;需要基础：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;1、有linux基础。&lt;/li&gt;
&lt;li&gt;2、对后台web开发有一定的了解。&lt;/li&gt;
&lt;li&gt;3、熟悉Nginx。
    
    </summary>
    
      <category term="web" scheme="https://yveda.github.io/categories/web/"/>
    
    
      <category term="阿里云" scheme="https://yveda.github.io/tags/%E9%98%BF%E9%87%8C%E4%BA%91/"/>
    
      <category term="网站" scheme="https://yveda.github.io/tags/%E7%BD%91%E7%AB%99/"/>
    
      <category term="服务器" scheme="https://yveda.github.io/tags/%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
      <category term="linux" scheme="https://yveda.github.io/tags/linux/"/>
    
      <category term="git" scheme="https://yveda.github.io/tags/git/"/>
    
      <category term="域名" scheme="https://yveda.github.io/tags/%E5%9F%9F%E5%90%8D/"/>
    
  </entry>
  
  <entry>
    <title>100本最棒的web前端图书推荐</title>
    <link href="https://yveda.github.io/2018/01/11/web%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91%E4%B9%A6%E7%B1%8D%E6%8E%A8%E8%8D%90/"/>
    <id>https://yveda.github.io/2018/01/11/web前端开发书籍推荐/</id>
    <published>2018-01-11T02:24:29.000Z</published>
    <updated>2018-06-12T16:44:18.404Z</updated>
    
    <content type="html"><![CDATA[<p>整理的100本优质前端开发书籍,拿走不谢<br><a id="more"></a></p><h2 id="HTML-amp-CSS"><a href="#HTML-amp-CSS" class="headerlink" title="HTML&amp;CSS"></a>HTML&amp;CSS</h2><h3 id="HTML与CSS入门经典（第8版）"><a href="#HTML与CSS入门经典（第8版）" class="headerlink" title="HTML与CSS入门经典（第8版）"></a>HTML与CSS入门经典（第8版）</h3><p>语言：中文</p><p>类型：pdf </p><p>简介：《HTML与CSS入门经典(第8版)》语言简洁、内容丰富，适合Web设计开发人员，以及大中专院校相关专业的学生阅读，对Web开发和发布感兴趣的读者也可以从中获益。</p><h3 id="Head-First-HTML与CSS-第2版"><a href="#Head-First-HTML与CSS-第2版" class="headerlink" title="Head First HTML与CSS 第2版"></a>Head First HTML与CSS 第2版</h3><p>语言：中文</p><p>类型：pdf </p><p>简介：是不是已经厌倦了那些深奥的HTML书？你可能在抱怨，只有成为专家之后才能读懂那些书。那么，找一本新修订的《Head First HTML与CSS（第2版）》吧，来真正学习HTML。你可能希望学会HTML和CSS来创建你想要的Web页面，从而能与朋友、家人、粉丝和狂热的顾客更有效地交流。你还希望使用最新的HTML5标准，能够保证随时间维护和扩展你的Web页面，使它们在所有浏览器和移动设备中都能正常工作。</p><h3 id="HTTP权威指南"><a href="#HTTP权威指南" class="headerlink" title="HTTP权威指南"></a>HTTP权威指南</h3><p>语言：中文</p><p>类型：pdf </p><p>简介：这本书是为希望理解HTTP以及Web底层结构的人编写的。适合想进一步提升自己的开发人员阅读。之前有人私下问我要过，我在QQ与微信群里公开分享过，今天也整理一下，分享给更多需要的同学。</p><hr><h2 id="CSS"><a href="#CSS" class="headerlink" title="CSS"></a>CSS</h2><h3 id="CSS权威指南-第3版"><a href="#CSS权威指南-第3版" class="headerlink" title="CSS权威指南(第3版)"></a>CSS权威指南(第3版)</h3><p>语言：中文</p><p>类型：pdf </p><p>简介：本书详细介绍了各个CSS属性以及属性之间的相互作用，并指导你如何避免一些常见的错误。不论你是一位经验丰富的web创作人员，还是一无所知的新手，都可以把它作为内容翔实的CSS参考资料放在手边。</p><h3 id="CSS从入门到精通-第2版-扫描版"><a href="#CSS从入门到精通-第2版-扫描版" class="headerlink" title="CSS从入门到精通(第2版)-扫描版"></a>CSS从入门到精通(第2版)-扫描版</h3><p>语言：中文</p><p>类型：pdf </p><p>简介：全书以CSS布局为主体内容，探讨CSS布局的入门知识与网站布局实战技巧、版式布局的细节、浏览器兼容性等，帮助读者改变传统的网站设计思维，进入基于Web标准的网页设计领域。本书含有大量实例，详细描述各个CSS属性以及代码编写技巧，方便读者模拟实践。 </p><h3 id="CSS3学习必备书籍《CSS3-实战》"><a href="#CSS3学习必备书籍《CSS3-实战》" class="headerlink" title="CSS3学习必备书籍《CSS3 实战》"></a>CSS3学习必备书籍《CSS3 实战》</h3><p>语言：中文</p><p>类型：pdf </p><p>简介：全书一共分为9章，首先从宏观上介绍了CSS 3技术的最新发展现状、新特性，以及现有的主流浏览器对这些新特性的支持情况；然后详细讲解了CSS 3的选择器、文本特性、颜色特性、弹性布局、边框和背景特性、盒模型、UI设计、多列布局、圆角和阴影、渐变、变形、转换、动画、投影、开放字体、设备类型、语音样式等重要的理论知识，这部分内容是本书的基础和核心。不仅每个知识点都配有丰富的、精心设计的实战案例，而且详细介绍了每一种新特性在各种主流浏览器上的兼容性，旨在帮助设计师们提高设计的安全性。</p><p>本书全彩印刷，排版、设计和装帧也非常精美，既适合学习参考，也适合收藏。无论你是前端领域的新人，还是有着丰富经验的老手，都能通过本书系统而全面地学习和实践CSS<br> 3的最新技术，为迎接新一轮的Web技术革命打下坚实的基础。</p><h3 id="CSS那些事儿"><a href="#CSS那些事儿" class="headerlink" title="CSS那些事儿"></a>CSS那些事儿</h3><p>语言：中文</p><p>类型：pdf </p><p>简介：此书专注于CSS技巧实例的讲解，由浅入深地分析了CSS样式在布局时所需要理解的原理。因出版时间比较早了，有的内容跟现在有些出入，但是作为基础入门的阅读，还是非常不错的图书。</p><h3 id="CSS设计指南-第3版"><a href="#CSS设计指南-第3版" class="headerlink" title="CSS设计指南(第3版)"></a>CSS设计指南(第3版)</h3><p>语言：中文</p><p>类型：pdf </p><p>简介：如果你想成为网页的美容大师，这本书一定要看，里面讲这些都是写非常基础的内容，内容也比较全面。</p><h3 id="CSS网站布局实录-（第二版）"><a href="#CSS网站布局实录-（第二版）" class="headerlink" title="CSS网站布局实录 （第二版）"></a>CSS网站布局实录 （第二版）</h3><p>语言：中文</p><p>类型：pdf </p><p>简介：说良心话，这本书内容真不赖，特别适合有点网页标准基础，却不知道如何把“标准”贯彻到实际工作中去的朋友。一章章的翻过去，命中的都是要害，不禁心中暗喜。看这样一本“糟粕与精华并存、弱智与天才的化身”的书，就好象是在做贼一般。</p><pre><code>这本书知识全面、完美应用。CSS选择器、样式继承、层叠、格式化、XML标签、CSS滤镜等。文本、图像、超链接、列表、菜单、网站导航、表单、数据表格、浮动布局等CSS布局控制。智能、创造型布局思维。智慧、完美视觉艺术效果之CSS布局技巧、CSS Hack实践战略。</code></pre><h3 id="《-写给大家看的CSS书（第2版）-》"><a href="#《-写给大家看的CSS书（第2版）-》" class="headerlink" title="《 写给大家看的CSS书（第2版） 》"></a>《 写给大家看的CSS书（第2版） 》</h3><p>语言：中文</p><p>类型：pdf </p><p>简介：《写给大家看的CSS书(第2版)》介绍了CSS样式设计，主要涵盖利用XHTML为内容定义结构、CSS的工作原理、字体和文本样式、定位元素、基本的页面布局等内容，详细讲述了所有程序员都需要掌握的两种技能：避免重写以前曾经写过的代码和掌握以最经济的方法编写代码。这本书，之前在web群里跟大家分享过，这本书还是比较基础的，入门的人可以看看。</p><h3 id="CSS-Web设计高级教程-第2版"><a href="#CSS-Web设计高级教程-第2版" class="headerlink" title="CSS Web设计高级教程-第2版"></a>CSS Web设计高级教程-第2版</h3><p>语言：中文</p><p>类型：pdf </p><p>简介：注重Web开发的实践，每章以现实中的Web站点为例，提供了很多容易理解的CSS技巧和技术，例如，如何实现翻转器、阴影、下拉菜单、CSS切换、博客、HTML Email模板，如何克服浏览器的兼容问题，如何构建CSS布局等。对如何高效开发以CSSS驱动的专业级设计给出了实用的方案。</p><h3 id="CSS揭秘"><a href="#CSS揭秘" class="headerlink" title="CSS揭秘"></a>CSS揭秘</h3><p>语言：中文</p><p>类型：pdf </p><p>简介：这本书的作者为我们揭示了 47 个鲜为人知的 CSS 技巧，主要内容包括背景与边框、形状、 视觉效果、字体排印、用户体验、结构与布局、过渡与动画等。作者带领我们循序渐进地探寻更优雅的解决方案，攻克每天都会遇到的各种网页样式难题，特别适合前端工程师、网页开发人员阅读。</p><h3 id="CSS高效开发实战"><a href="#CSS高效开发实战" class="headerlink" title="CSS高效开发实战"></a>CSS高效开发实战</h3><p>语言：中文</p><p>类型：pdf </p><p>简介：这本书内容精练、重点突出、实例丰富、讲解通俗，是广大CSS设计人员和前端开发人员必备的参考书。</p><h3 id="图解CSS3核心技术与案例实战"><a href="#图解CSS3核心技术与案例实战" class="headerlink" title="图解CSS3核心技术与案例实战"></a>图解CSS3核心技术与案例实战</h3><p>语言：中文</p><p>类型：pdf </p><p>简介：CSS3领域的标准性著作，由资深Web前端工程师根据CSS3的最新技术标准撰写。内容极为全面、丰富和翔实，由浅入深地讲解了CSS3新特性的语法、功能和使用技巧，涵盖选择器、边框、背景、文本、颜色、UI、动画、新型盒模型、媒体查询、响应式设计等各种模块；写作方式创新，有趣且易懂，用图解的方式来描述CSS3的每一个特性甚至每一个步骤都配有实战效果图；包含大量案例，实战性强，每个特性都有作者从实践中精心归纳和挑选出来的案例辅助讲解，同时还包含一个综合性的大案例。无论你是完全没有经验的准前端工程师，还是已经有一定经验的前端工程师，如果你想系统学习CSS3，那么本书将会是你的最佳选择；如果你是一位成熟的前端开发工程师，但时常为如何合理地使用某些特性而费时去查阅相关资料，那么本书也是你的不二选择。</p><h3 id="精彩绝伦的CSS"><a href="#精彩绝伦的CSS" class="headerlink" title="精彩绝伦的CSS"></a>精彩绝伦的CSS</h3><p>语言：中文</p><p>类型：pdf </p><p>简介：这本书主要讲解了如何选用正确的工具、如何通过jQuery使用CSS效果和CSS3技术。例如：显示或隐藏元素，通过XHTML为body或html元素设置背景，超过15种布局技巧，包括清除浮动、两栏/三栏布局、伪造栏布局、“唯一布局”、Holy Grail、基于em的布局、流式网格、固定页脚等。各种CSS效果，包括CSS弹出框、框冲切、圆角、CSS精灵、滑动门、流式漂白、参差浮动等应用CSS表样式，包括使用表头、主体、脚注、行标题、面向列的样式、表的映射和图形化等。</p><p>本书适合具有一定的CSS和JavaScript使用经验的Web开发人员学习参考。</p><hr><h2 id="JavaScript"><a href="#JavaScript" class="headerlink" title="JavaScript"></a>JavaScript</h2><h3 id="JavaScript-DOM编程艺术"><a href="#JavaScript-DOM编程艺术" class="headerlink" title="JavaScript DOM编程艺术"></a>JavaScript DOM编程艺术</h3><p>语言：中文</p><p>类型：pdf </p><p>简介：讲述了JavaScript和DOM的基础知识，但重点放在DOM编程技术背后的思路和原则：预留退路、循序渐进和以用户为中心等，这些概念对于任何前端Web开发工作都非常重要。适合Web设计师和开发人员阅读。</p><h3 id="javascript框架高级编程——应用prototype、yui、extjs、doio、mootools"><a href="#javascript框架高级编程——应用prototype、yui、extjs、doio、mootools" class="headerlink" title="javascript框架高级编程——应用prototype、yui、extjs、doio、mootools"></a>javascript框架高级编程——应用prototype、yui、extjs、doio、mootools</h3><p>语言：中文</p><p>类型：pdf </p><p>简介：运用大量实用的示例和清晰的讲解来演示现代web开发涉及的众多方面,以及javascript框架提供了什么选项来帮助我们快速构建并运行应用程序。</p><h3 id="JavaScript异步编程"><a href="#JavaScript异步编程" class="headerlink" title="JavaScript异步编程"></a>JavaScript异步编程</h3><p>语言：中文</p><p>类型：pdf </p><p>简介：讲述了基本的异步处理技巧，包括PubSub、事件模式、Promises等，通过这些技巧，可以更好地应对大型Web应用程序的复杂性，交付快速响应的代码。理解了Javascript的异步模式可以让读者写出结构更合理、性能更出色、维护更方便的Javascript程序。适合JavaScript开发人员阅读。</p><h3 id="精通JavaScript"><a href="#精通JavaScript" class="headerlink" title="精通JavaScript"></a>精通JavaScript</h3><p>语言：中文</p><p>类型：pdf </p><p>简介：讲述了现代 JavaScript 的所有知识，展现了这门技术将能给网站建设带来如何丰富的体验。本书言简意赅，扩展了读者视野，并关注于基础且重要的主题——现代 JavaScript 是什么和不是什么，浏览器支持的当前状态，以及需要注意的陷阱等。适合各层次 Web 开发人员阅读。</p><h3 id="《JAVASCRIPT完全自学手册》"><a href="#《JAVASCRIPT完全自学手册》" class="headerlink" title="《JAVASCRIPT完全自学手册》"></a>《JAVASCRIPT完全自学手册》</h3><p>语言：中文</p><p>类型：pdf </p><p>简介：这本书讲解的知识点易、广、全、深。每一个知识点均围绕具体的实例展开，且实例中配上了详细的注释和效果图，易于理解与实践，可以使读者在抽象的知识点中得到直观的印象。它涵盖了JavaScript的绝大多数应用方面，牵涉的知识面很广。讲解的各类对象的属性、方法和事件等参考了微软公司的MSDN，内容全面，深入到JavaScript的本质，不仅仅讲解了其在页面特效中的应用，还挖掘了JavaScript作为一种基于对象语言所特有的类与继承的实现。适合入门的人阅读，也可作为开发人员的参考手册。</p><h3 id="JavaScript基础教程（第8版"><a href="#JavaScript基础教程（第8版" class="headerlink" title="JavaScript基础教程（第8版)"></a>JavaScript基础教程（第8版)</h3><p>语言：中文</p><p>类型：pdf </p><p>简介：本书是已被奉为经典的JavaScript入门书，据说原版累计销售已经超过150<br> 000册，它以易学便查、图文并茂、循序渐进和善于用常见任务讲解语言知识而著称，讲述JavaScript编程的必知必会知识，同时兼顾了DOM、XML、Ajax、jQuery等重要的相关技术内容。特别适合入门级的朋友。</p><h3 id="《零基础学-Javascript-》"><a href="#《零基础学-Javascript-》" class="headerlink" title="《零基础学 Javascript 》"></a>《零基础学 Javascript 》</h3><p>语言：中文</p><p>类型：pdf </p><p>简介：由浅入深、循序渐进地介绍了JavaScript的语法、各对象的方法和属性的使用方法。全书由3篇组成：第一篇为基础篇，介绍了JavaScript的数据类型、常量、变量、表达式、运算符、语句、函数、对象和数组；第二篇为实用篇，介绍了JavaScript的对象层次与事件、窗口对象、屏幕对象、浏览器对象、历史对象、地址对象和文档对象等；第三篇为Ajax篇，介绍了Ajax的使用方法以及相关技术，还有一些流行的Ajax框架，如JQuery等。</p><p>比较适用于掌握了HTML语言、想进一步学习如何制作动态网页的入门者，也适用于有一定JavaScript基础的想进一步提高的网页开发者。</p><h3 id="JavaScript模式"><a href="#JavaScript模式" class="headerlink" title="JavaScript模式"></a>JavaScript模式</h3><p>语言：中文</p><p>类型：pdf </p><p>简介：全书共八章节，内容包括简介、基本技巧、字面量和构造函数、函数、对象创建模式、代码复用模式等。适合有一定JavaScript基础的人阅读。</p><h3 id="JavaScript实战"><a href="#JavaScript实战" class="headerlink" title="JavaScript实战"></a>JavaScript实战</h3><p>语言：中文</p><p>类型：pdf </p><p>简介：这本书通过10个具体项目，包括构建可扩展的JavaScript库、使用GUI窗口小部件框架、开发支持拖放的购物车和编写JavaScript游戏等，讲述JavaScript最佳实践、Ajax技术，以及一些流行的JavaScript库，如Rico、Dojo、script.aculo.us、 YUI等。你在理解的基础上可以方便地将所学知识应用到自己的项目中。里面项目也非常实用，可以直接参考利用。</p><h3 id="JavaScript语言精粹"><a href="#JavaScript语言精粹" class="headerlink" title="JavaScript语言精粹"></a>JavaScript语言精粹</h3><p>语言：中文</p><p>类型：pdf </p><p>简介：这本书是介绍 JavaScript 语言本质的权威书籍，值得任何正在或准备从事JavaScript 开发的人阅读，这本书很薄，但是需要反复阅读，你才会理解大师们的思想，只有这样，我们才有可能站在巨人的肩上，才有机会超越大师。</p><h3 id="《JavaScript-DOM编程艺术第二版（中文）》"><a href="#《JavaScript-DOM编程艺术第二版（中文）》" class="headerlink" title="《JavaScript DOM编程艺术第二版（中文）》"></a>《JavaScript DOM编程艺术第二版（中文）》</h3><p>《JavaScript DOM编程艺术》(第二版)</p><p>语言：中文</p><p>类型：pdf </p><p>简介：这本书作为被大家推荐的最多的前端入门书籍是有道理的。<br>他能真正让大家了解dom脚本编程，或是说前端编程技术背后的思路和原则。<br>对于初学者来说，这本书没有任何门槛，按部就班跟着书籍实例编写代码即可。我们会知晓如何对浏览器元素操作和掌控，会学会如何实现简单的页面效果。这种简单易得的成就感是一个编程语言入门时最难能可贵的体验。</p><p>本书讲述了JavaScript和DOM的基础知识，但重点放在DOM编程技术背后的思路和原则：预留退路、循序渐进和以用户为中心等，这些概念对于任何前端Web开发工作都非常重要。本书将这些概念贯穿在书中的所有代码示例中，使你看到用来创建图片库页面的脚本、用来创建动画效果的脚本和用来丰富页面元素呈现效果的脚本，最后结合所讲述的内容创建了一个实际的网站。</p><h3 id="Javascript-高级程序设计-第三版"><a href="#Javascript-高级程序设计-第三版" class="headerlink" title="Javascript 高级程序设计(第三版)"></a>Javascript 高级程序设计(第三版)</h3><p>语言：中文</p><p>类型：pdf </p><p>简介：无论何时，这都是学习js最好的书。</p><p>如果说其他的书都是在合适的阶段会有不一般的体验。<br>这本书就是无论什么阶段，都够你感悟一番的。</p><p>这本书排版舒服，翻译得体，内容丰富，语言流畅。涵盖了js语法（面向对象，闭包作用域等），js使用（dom，bom，html5API），编程实践（高阶函数，编码规范）等程序员使用javascript时会遇到的大部分问题。</p><h3 id="《Javascript高效图形编程》"><a href="#《Javascript高效图形编程》" class="headerlink" title="《Javascript高效图形编程》"></a>《Javascript高效图形编程》</h3><p>语言：中文</p><p>类型：pdf </p><p>简介：《JavaScript高效图形编程》是一本具有很强实操性的JavaScript图书，全书共分10章，涵盖的主要内容有：JavaScript的面向对象机制、JavaScript性能优化、jQuery和ExtJS库、高级UI设计、Web游戏开发、面向移动设备的开发、图形编程知识等。</p><p>《JavaScript高效图形编程》适合有一定Web开发经验和JavaScript基础的开发人员学习。</p><h3 id="《JavaScript权威指南-第6版-中文版》"><a href="#《JavaScript权威指南-第6版-中文版》" class="headerlink" title="《JavaScript权威指南(第6版)中文版》"></a>《JavaScript权威指南(第6版)中文版》</h3><p>《JavaScript权威指南(第6版)(中文版)》</p><p>语言：中文</p><p>类型：pdf<br>简介：《JavaScript权威指南(第6版)中文版》全面介绍了JavaScript语言的核心，以及Web浏览器中实现的遗留和标准的DOM。它运用了一些复杂的例子，说明如何处理验证表单数据、使用cookie、创建可移植的DHTML动画等常见任务。《JavaScript权威指南》还包括详细的参考手册，涵盖了JavaScript的核心API、遗留的客户端API和W3C标准DOM API，记述了这些API中的每一个JavaScript对象、方法、性质、构造函数、常量和事件处理程序。</p><h3 id="JavaScript经典教程"><a href="#JavaScript经典教程" class="headerlink" title="JavaScript经典教程"></a>JavaScript经典教程</h3><p>语言：中文</p><p>类型：pdf </p><p>简介：本书包括JavaScript基础知识、对象、事件处理、文档对象、窗口与浏览器、表单对象、链接与图像、Dhtml基储Dhtml应用，hTML4.0快速参考手册，CSS属性参考等内容。</p><h3 id="javascript应用程序经典实例"><a href="#javascript应用程序经典实例" class="headerlink" title="javascript应用程序经典实例"></a>javascript应用程序经典实例</h3><p>语言：中文</p><p>类型：pdf </p><p>简介：市面上有成打的JavaScript图书教你怎么做，但实际上，像本书这样，能够为网站管理员提供一整套易于使用的经典客户端JavaScript程序，并且带有完整说明文字的，却是少之又少。一册在手，读者可以立即利用书中的程序为自己的网站增添各种丰富功能。</p><p>本书围绕JavaScript核心功能，深入探索了相关的代码和技术。书中的程序可以帮助读者将自己的网站模块化，从而在站点管理和程序开发中省时省力。</p><h3 id="编写高质量代码-改善JavaScript程序的188个建议"><a href="#编写高质量代码-改善JavaScript程序的188个建议" class="headerlink" title="编写高质量代码 改善JavaScript程序的188个建议"></a>编写高质量代码 改善JavaScript程序的188个建议</h3><p>语言：中文</p><p>类型：pdf </p><p>简介：《编写高质量代码:改善JavaScript程序的188个建议》针对每个问题所设计的应用场景都非常典型，给出的建议也都与实践紧密结合。每一条建议都可能在你的下一行代码、下一个应用或下一个项目中被用到，建议你将《编写高质量代码:改善JavaScript程序的188个建议》放置在手边，随时查阅，一定能使你的学习和开发工作事半功倍。</p><h3 id="JavaScript捷径教程"><a href="#JavaScript捷径教程" class="headerlink" title="JavaScript捷径教程"></a>JavaScript捷径教程</h3><p>语言：中文</p><p>类型：pdf </p><p>简介：这本书各项技术均配有直观而简洁的示例， 可帮助你快速掌握这些技。比较合适具有一定的JavaScript 和DOM 脚本开发经验的Web 开发人员。</p><h3 id="JavaScript王者归来"><a href="#JavaScript王者归来" class="headerlink" title="JavaScript王者归来"></a>JavaScript王者归来</h3><p>语言：中文</p><p>类型：pdf </p><p>简介：它是一本为初学者准备的入门级教程，又是一本探寻程序设计思想本源的“魔法典籍”，也是一本Web开发工程师们需要的案头参考书。本书是你进入脚本王国的一把钥匙，引导你领略脚本魔法的神奇魅力。它还是一本着眼于未来改变互联网的启蒙读物，在它的引领下，你将在互联网的世界里获得你所希望得到的知识、智慧、成就和快乐。</p><h3 id="JavaScript-DOM高级程序设计"><a href="#JavaScript-DOM高级程序设计" class="headerlink" title="JavaScript.DOM高级程序设计"></a>JavaScript.DOM高级程序设计</h3><p>语言：中文</p><p>类型：pdf </p><p>简介：通过学习这本书内容，读者将能构建起属于自己的DOM 实用方法库。本书适合有Web 开发和设计经验的同学阅读。</p><h3 id="JavaScript基础与案例开发详解"><a href="#JavaScript基础与案例开发详解" class="headerlink" title="JavaScript基础与案例开发详解"></a>JavaScript基础与案例开发详解</h3><p>语言：中文</p><p>类型：pdf </p><p>简介：这本书讲解了JavaScript的基本语法，所以即使没有任何编程语言基础，也能够明白JavaScript的运行机制。适合初学者进行阅读，以及对javascript敢兴趣的同学阅读。</p><h3 id="JavaScript学习指南（第2版）"><a href="#JavaScript学习指南（第2版）" class="headerlink" title="JavaScript学习指南（第2版）"></a>JavaScript学习指南（第2版）</h3><p>语言：中文</p><p>类型：pdf </p><p>简介：这本书系统地介绍了JavaScript的基本语法、基本对象、调试工具与排错技术、事件处理机制、浏览器对象模型/文档对象模型（BOM/DOM）等方面的知识，适合入门者阅读。</p><h3 id="深入浅出javascript-head-first-javascript"><a href="#深入浅出javascript-head-first-javascript" class="headerlink" title="深入浅出javascript-head first javascript"></a>深入浅出javascript-head first javascript</h3><p>语言：中文</p><p>类型：pdf </p><p>简介：如果你喜欢Head First系列丛书的话，建议你这边书也看看，这本书覆盖了所有的javascript基本知识。适合初学者阅读。</p><h3 id="JAVASCRIPT性能优化：度量、监控与可视化"><a href="#JAVASCRIPT性能优化：度量、监控与可视化" class="headerlink" title="JAVASCRIPT性能优化：度量、监控与可视化"></a>JAVASCRIPT性能优化：度量、监控与可视化</h3><p>语言：中文</p><p>类型：pdf </p><p>简介：此书从语言特性、浏览器原理、网络传输机制、数据结构等多角度深层探讨影响JavaScript代码性能的根本原因，从性能问题的度量、监控和可视化全维度给出了提升JavaScript代码性能的实用工具、方法和最佳实践，并对各种常见的性能问题给出了完整的解决方案。</p><h3 id="你不知道的JavaScript（上卷）"><a href="#你不知道的JavaScript（上卷）" class="headerlink" title="你不知道的JavaScript（上卷）"></a>你不知道的JavaScript（上卷）</h3><p>语言：中文</p><p>类型：pdf </p><p>简介：JavaScript语言有很多复杂的概念，但却用简单的方式体现出来（比如回调函数），因此，JavaScript开发者无需理解语言内部的原理，就能编写出功能全面的程序；就像收音机一样，你无需理解里面的管子和线圈都是做什么用的，只要会操作收音机上的按键，就可以收听你喜欢的节目。然而，JavaScript的这些复杂精妙的概念才是语言的精髓，即使是经验丰富的JavaScript开发者，如果没有认真学习也无法真正理解语言本身的特性。正是因为绝大多数人不求甚解，一遇到出乎意料的行为就认为是语言本身有缺陷，进而把相关的特性加入黑名单，久而久之就排除了这门语言的多样性，人为地使它变得不完整、不安全。“你不知道的JavaScript”系列就是要让不求甚解的JavaScript开发者迎难而上，深入语言内部，弄清楚JavaScript每一个零部件的用途。本书介绍了该系列的两个主题：“作用域和闭包”以及“this和对象原型”。掌握了这些知识之后，无论什么技术、框架和流行词语，你都能轻松理解。</p><h3 id="基于MVC的JavaScript-Web富应用开发"><a href="#基于MVC的JavaScript-Web富应用开发" class="headerlink" title="基于MVC的JavaScript Web富应用开发"></a>基于MVC的JavaScript Web富应用开发</h3><p>语言：中文</p><p>类型：pdf </p><p>简介：通过由浅入深的讲解，你将学会如何构建具有丰富交互以及优雅体验的JavaScript应用，书中同样提供了大量的示例代码，可以帮助你更深入的理解很多重要的概念。揭开MVC的神秘面纱，教你如何设计合理的架构以及处理应用内部模块之间的依赖。介绍模板引擎和数据绑定；讲解远程数据加载、第二代Ajax以及跨域请求；利用WebSockets和Node构建实时应用；拖拽上传文件以及上传进度提示；讲解主流的库和框架，包括jQuery、JavaScriptMVC以及Backbone；编写测试用例，并使用控制台工具来调试你的应用；部署应用的最佳实践，比如缓存机制和代码压缩等</p><h3 id="JavaScript设计模式"><a href="#JavaScript设计模式" class="headerlink" title="JavaScript设计模式"></a>JavaScript设计模式</h3><p>语言：中文</p><p>类型：pdf </p><p>简介：本书共有两部分。</p><p>第一部分给出了实现具体设计模式所需要的面向对象特性的基础知识，主要包括接口、封装和信息隐藏、继承、单体模式等内容。</p><p>第二部分则专注于各种具体的设计模式及其在JavaScript语言中的应用，主要介绍了工厂模式、桥接模式、组合模式、门面模式等几种常见的模式。</p><p>比较适合Web 前端开发人员阅读和参考，同时也比较适合有C++/Java/C# 背景的服务器端程序员学习。</p><hr><h2 id="jquery"><a href="#jquery" class="headerlink" title="jquery"></a>jquery</h2><h3 id="《jQuery权威指南》"><a href="#《jQuery权威指南》" class="headerlink" title="《jQuery权威指南》"></a>《jQuery权威指南》</h3><p>语言：中文</p><p>类型：pdf<br>简介：《jQuery权威指南》内容全面，系统地讲解了jQuery的方方面面，实战性强，全书包含118个示例和2个综合案例，资深专家亲自执笔，4大专业社区一致鼎力推荐。</p><h3 id="《Web开发典藏大系：jQuery网页开发实例精解》"><a href="#《Web开发典藏大系：jQuery网页开发实例精解》" class="headerlink" title="《Web开发典藏大系：jQuery网页开发实例精解》"></a>《Web开发典藏大系：jQuery网页开发实例精解》</h3><p>jquery网页开发实例</p><p>语言：中文</p><p>类型：pdf<br>简介：《Web开发典藏大系：jQuery网页开发实例精解》是一本介绍jquery网页开发基础应用的书籍，是一本简单易懂，把复杂问题简单化的书。本书立足于jquery入门基础技术，对jquery的产生、jquery基础、如何将jquery应用于页面开发、如何产生页面元素特效等都进行了细致入微的讲解。这必将使每一个阅读本书的读者少走弯路，快速上手，建立用jquery进行开发网页的信心。<br>《Web开发典藏大系：jQuery网页开发实例精解》共15章，分2篇。第1篇jquery基础理论，主要介绍javascript脚本、htmldom、div的控制等知识，这些内容都是学习后续章节所必须掌握的基础知识。第2篇jquery实战开发与应用，主要介绍如何利用jquery控制页面元素；如何使页面元素产生特殊效果；不同功能插件的使用方法及注意事项；如何编写jquery插件，以帮助读者理解、使用和开发插件。</p><h3 id="JQUERY应用开发实践指南"><a href="#JQUERY应用开发实践指南" class="headerlink" title="JQUERY应用开发实践指南"></a>JQUERY应用开发实践指南</h3><p>语言：中文</p><p>类型：pdf </p><p>简介：此书由浅入深地介绍了jQuery框架的方方面面，为对这一框架感兴趣的各类开发人员提供了一本完备的指南。书中精选了jQuery的核心组件，着重介绍了jQuery对传统JavaScript编程的增强，细心研读之下，能够对这一流行框架有全面的了解，相信也能给网站编程带来很大的好处。</p><h3 id="《锋利的jQuery》"><a href="#《锋利的jQuery》" class="headerlink" title="《锋利的jQuery》"></a>《锋利的jQuery》</h3><p>语言：中文</p><p>类型：pdf </p><p>简介：这本书循序渐进地对jQuery的各种函数和方法调用进行了介绍，可以系统地掌握jQuery的选择器、DOM操作、事件和动画、AJAX应用、插件、jQuery Mobile、jQuery各个版本变化、jQuery性能优化和技巧等知识点，并结合每个章节后面的案例演示进行练习，达到掌握核心知识点的目的。</p><p>本书从案例研究、网站材料、网站结构、网站样式和网站脚本等方面指导我们参与到项目建设中来。</p><h3 id="jQuery基础教程（第四版）"><a href="#jQuery基础教程（第四版）" class="headerlink" title="jQuery基础教程（第四版）"></a>jQuery基础教程（第四版）</h3><p>语言：中文</p><p>类型：pdf </p><p>简介：第一版自2008上市以来，一版再版，累计重印14次，是国内首屈一指的jQuery经典著作！作为最新升级版，本书涵盖jQuery 1.10.x和jQuery 2.0.x。</p><h3 id="精彩绝伦的JQuery"><a href="#精彩绝伦的JQuery" class="headerlink" title="精彩绝伦的JQuery"></a>精彩绝伦的JQuery</h3><p>语言：中文</p><p>类型：pdf </p><p>简介：阐述如何利用少量的JavaScript基础知识将jQuery框架整合进网站，以创建富Web界面，并建立兼容所有主流浏览器的交互性网站。</p><h3 id="JQuery实战-扫描版"><a href="#JQuery实战-扫描版" class="headerlink" title="JQuery实战-扫描版"></a>JQuery实战-扫描版</h3><p>语言：中文</p><p>类型：pdf </p><p>简介：全面介绍jQuery知识，展示如何遍历HTML文档、处理事件、执行动画以及给网页添加Ajax。书中紧紧地围绕“用实际的示例来解释每一个新概念”这一宗旨，生动描述了jQuery如何与其他工具和框架交互以及如何生成jQuery插件。jQuery 是目前最受欢迎的JavaScript/Ajax库之一，能用最少的代码实现最多的功能。</p><h3 id="犀利开发-jQuery内核详解与实践"><a href="#犀利开发-jQuery内核详解与实践" class="headerlink" title="犀利开发 jQuery内核详解与实践"></a>犀利开发 jQuery内核详解与实践</h3><p>语言：中文</p><p>类型：pdf </p><p>简介：本书循序渐进地讲解了jQuery高效开发的方法和技巧，内容包括jQuery框架的设计模式和思路、Sizzle选择器的构成和工作机制、DOM文档操作、事件处理、动画设计、Ajax异步通信、插件扩展和辅助工具等。适合Web开发人员阅读和参考。</p><hr><h2 id="Ajax"><a href="#Ajax" class="headerlink" title="Ajax"></a>Ajax</h2><h3 id="Ajax-基础教程"><a href="#Ajax-基础教程" class="headerlink" title="Ajax.基础教程"></a>Ajax.基础教程</h3><p>语言：中文</p><p>类型：pdf </p><p>简介：这本书主要内容包括XMLHttpRequest对象及其属性和方法、发送请求和处理响应、构建完备的Ajax开发工具、使用JsUnit测试JavaScript、分析JavaScript调试工具和技术，以及Ajax开发模式和框架等。适合各层次Web应用开发人员和网页设计人员阅读。</p><h3 id="Ajax从入门到精通"><a href="#Ajax从入门到精通" class="headerlink" title="Ajax从入门到精通"></a>Ajax从入门到精通</h3><p>语言：中文</p><p>类型：pdf </p><p>简介：这本书从开发Ajax应用所需要具备的基本能力开始，逐步深入地向我们介绍JavaScript的基本知识、高级技巧、开发工具的使用、开发框架的介绍、浏览器兼容性的问题、调试技巧、Ajax应用程序的组成、不同的数据组织方式，以及开发过程中经常会遇到的问题，并对Ajax应用程序的架构进行了探讨，对于PHP、ASP、Java、.NET程序员有很大的帮助，同时适合Web前端开发人员、Web性能检测人员、需要掌握Ajax技术的测试人员、Web架构师、学习Web高级技术的初级程序员以及所有的Web普通开发人员学习使用。</p><h3 id="head-first-ajax中文版"><a href="#head-first-ajax中文版" class="headerlink" title="head first ajax中文版"></a>head first ajax中文版</h3><p>语言：中文</p><p>类型：pdf </p><p>简介：这本书特别适合入门，主要强调基本概念，强调每个技术细节的作用，这样的书让人读起来比较舒服，也比较有成就感，当然如果深入研究的话，还需要再看其他的书，但是作为入门，这本书还是很不错的。</p><h3 id="疯狂ajax讲义"><a href="#疯狂ajax讲义" class="headerlink" title="疯狂ajax讲义"></a>疯狂ajax讲义</h3><p>语言：中文</p><p>类型：pdf </p><p>简介：这本书的技术广度不错，深度稍显不足， 作为ajax的初学者，这本书还是不错的，我通过这本书还是能学到很多的东西， 不管是JavaScript基本语法、DOM编程，还是后面的prototype、jquery、dwr，对初学者都有很大的帮助。 比较适合Ajax入门。</p><h3 id="Ajax与PHP-Web开发"><a href="#Ajax与PHP-Web开发" class="headerlink" title="Ajax与PHP.Web开发"></a>Ajax与PHP.Web开发</h3><p>语言：中文</p><p>类型：pdf </p><p>简介：本书指导我们使用Ajax、PHP及其他相关技术建立快速响应的网页。本书不仅从Ajax的客户端和服务器端技术两个方面指导读者逐步掌握Ajax基础应用，还通过实例详细演示了Ajax表单验证、Ajax聊天室、Ajax Suggest、使用SVG实现的Ajax实时绘图程序、Ajax Grid、Ajax RSS阅读器和Ajax拖放等的实现过程。本书适合已经掌握PHP、XML、JavaScript和MySQL基础知识，并想要了解Ajax核心和工作原理的同学阅读。</p><h3 id="Ajax安全技术"><a href="#Ajax安全技术" class="headerlink" title="Ajax安全技术"></a>Ajax安全技术</h3><p>语言：中文</p><p>类型：pdf </p><p>简介：这是一本为专业人士提供预防Ajax安全漏洞一手实践的入门指导书。适合广大基于AJAX开发Web程序的开发人员阅读。</p><h3 id="AJAX企业级开发"><a href="#AJAX企业级开发" class="headerlink" title="AJAX企业级开发"></a>AJAX企业级开发</h3><p>语言：中文</p><p>类型：pdf </p><p>简介：通过这本书，你将看到把数据表、Web 窗体、图表、搜索和过滤连接在一起用于构建AJAX应用程序的框架开发的整个过程，适合有一定开发基础的人员阅读。</p><hr><h2 id="Bootstrap"><a href="#Bootstrap" class="headerlink" title="Bootstrap"></a>Bootstrap</h2><h3 id="深入理解Bootstrap"><a href="#深入理解Bootstrap" class="headerlink" title="深入理解Bootstrap"></a>深入理解Bootstrap</h3><p>语言：中文</p><p>类型：pdf </p><p>简介：Bootstrap是目前全球最流行、最火爆的Web前端开发框架之一，这本书适合没有Bootstrap经验的初级前端开发工程师阅读。</p><h3 id="Bootstrap实战"><a href="#Bootstrap实战" class="headerlink" title="Bootstrap实战"></a>Bootstrap实战</h3><p>语言：中文</p><p>类型：pdf </p><p>简介：这本书详细讲解了Bootstrap的组件、插件和扩展技术，而且深度解析了Bootstrap的内核源代码。适合掌握了一定css,html，js的同学阅读。</p><hr><h2 id="WEB"><a href="#WEB" class="headerlink" title="WEB"></a>WEB</h2><h3 id="Web标准之道"><a href="#Web标准之道" class="headerlink" title="Web标准之道"></a>Web标准之道</h3><p>语言：中文</p><p>类型：pdf </p><p>简介：此书为博客园知名博主联手打造，涉及Web标准、HTML/CSS、JavaScript、SEO优化等诸多领域。此书并不是一本由代码和技巧堆积而成的集合，更多的是探讨了Web设计中若干理念和心得，其中多为经验之谈。值得一看，里面有很多东西值得借鉴。</p><p>语言：中文</p><p>类型：pdf </p><p>简介：本书为这个大家熟悉的主题，提供了一种新的学习方法：如何创建当今存在的web页面——以及在可预见的未来如何创建它们。仅使用html代码编写web页面的年代已经一去不复返。随着web技术的发展，为了创建有效、吸引人的web页面，开发人员需要学习很多技术。本书回顾了html，也介绍了如何使用xhtml构造web页面和用于控制页面外观的层叠样式表(css)。</p><pre><code>本书通过一些典型示例探索了web浏览器的演化，以及其如何反映web页面的开发方式。读者将学习到如何利用浏览器的最新功能，以及如何确保所创建的页面能够工作于较老但仍在使用的浏览器中。另外，读者将了解如何为许多能够访问web页面的设备编写页面。通过结合可用性和可访问性，开发人员将能够编写外观优美、代码专业并采用了最新技术的web页面。</code></pre><p>本书主要内容组成html和xhtml的不同元素和属性，以及如何使用它们编写web页面利用css使页面吏吸引入并更容易操作javascript的基础知识，以便开发人员在web页面中添加交互如何将站点发布到internet中，如何为站点找到访问者，以及如何让搜索引擎识别站点。</p><p>本书读者对象</p><p>本书适用于想学习如何创建web页面的读者，也适用于想提高web设计技能水平的读者。本书的读者不需要具有编程或者web页面编写知识。</p><h3 id="响应式Web设计：HTML5和CSS3实战"><a href="#响应式Web设计：HTML5和CSS3实战" class="headerlink" title="响应式Web设计：HTML5和CSS3实战"></a>响应式Web设计：HTML5和CSS3实战</h3><p>语言：中文</p><p>类型：pdf </p><p>简介：无论你想学习响应式Web设计，还是学习HTML5和CSS3的实际应用，这本书都能满足你的需要，是毋庸置疑的明智之选。</p><h3 id="高性能网站建设指南"><a href="#高性能网站建设指南" class="headerlink" title="高性能网站建设指南"></a>高性能网站建设指南</h3><p>语言：中文</p><p>类型：pdf </p><p>简介：这本书介绍了网站性能问题的现状、产生的原因，以及改善或解决性能问题的原则、技术技巧和最佳实践。特别适合Web架构师、信息架构师、Web开发人员阅读，同时可以作为技术提升的一本参考书。</p><h3 id="全端Web开发：使用JavaScript与Java"><a href="#全端Web开发：使用JavaScript与Java" class="headerlink" title="全端Web开发：使用JavaScript与Java"></a>全端Web开发：使用JavaScript与Java</h3><p>语言：中文</p><p>类型：pdf </p><p>简介：此书以Java和JavaScript这两种最流行的服务器与客户端开发环境为例，全面讲解了最新的C/S应用开发范式。还讲解了很多实用的C/S开发架构，还通过各种实例进一步强化了读者的认知。</p><hr><h2 id="HTML5-含有Canvas"><a href="#HTML5-含有Canvas" class="headerlink" title="HTML5( 含有Canvas)"></a>HTML5( 含有Canvas)</h2><h3 id="HTML5-从入门到精通"><a href="#HTML5-从入门到精通" class="headerlink" title="HTML5 从入门到精通"></a>HTML5 从入门到精通</h3><p>语言：中文</p><p>类型：pdf </p><p>简介：《HTML5从入门到精通》不仅能够使读者系统而全面地学习理论知识，还能满足读者充分实践的需求。</p><h3 id="HTML5游戏开发"><a href="#HTML5游戏开发" class="headerlink" title="HTML5游戏开发"></a>HTML5游戏开发</h3><p>语言：中文</p><p>类型：pdf </p><p>简介：HTML5可以帮助我们构建漂亮的动态网站，也许你想了解它的诸多新特性，又担心这些内容过于枯燥，那么你会很庆幸得到手上的这本书。它通过我们熟悉的一个个游戏让你轻松掌握HTML5、CSS和JavaScript的新特性，并灵活应用到Web开发中。也许你顾虑自己对编程一窍不通，不知如何融入丰富多彩的Web世界。那么大可放心，因为本书在介绍游戏开发时会从头谈起，不仅会点明通用的编程技术，甚至连最基础的标记也给出注释说明。</p><h3 id="HTML5高级程序设计"><a href="#HTML5高级程序设计" class="headerlink" title="HTML5高级程序设计"></a>HTML5高级程序设计</h3><p>语言：中文</p><p>类型：pdf </p><p>简介：在今天，大多数现代浏览器都已经支持HTML5。学习体验HTML5带给Web开发的便捷、快速和强大功能，是每一位Web设计和开发人员的当务之急。</p><h3 id="《HTML5-Canvas-游戏开发实战》"><a href="#《HTML5-Canvas-游戏开发实战》" class="headerlink" title="《HTML5-Canvas 游戏开发实战》"></a>《HTML5-Canvas 游戏开发实战》</h3><p>语言：中文</p><p>类型：pdf<br>简介：《HTML5 Canvas游戏开发实战》主要讲解使用HTML5 Canvas来开发和设计各类常见游戏的思路和技巧，在介绍HTML5 Canvas相关特性的同时，还通过游戏开发实例深入剖析了其内在原理，让读者不仅知其然，而且知其所以然。在书中，除了介绍了HTML5 Canvas的基础API之外，还重点阐述了如何在JavaScript中运用面向对象的编程思想来进行游戏开发。</p><p>《HTML5 Canvas游戏开发实战》在介绍每个游戏开发的过程时，都会包括游戏分析、开发过程、代码解析和小结等相关内容，以帮助读者了解每种类型游戏开发的详细步骤，让读者彻底掌握各种类型游戏的开发思想。最后，还通过数据对比分析，指导读者提升程序的性能，写出高效的代码，从而开发出运行流畅的游戏。</p><h3 id="《HTML5-canvas基础教程》"><a href="#《HTML5-canvas基础教程》" class="headerlink" title="《HTML5 canvas基础教程》"></a>《HTML5 canvas基础教程》</h3><p>语言：中文</p><p>类型：pdf<br>简介：《HTML 5 Canvas基础教程》从HTML5和JavaScript（以及jQuery）的基础知识讲起，全面介绍了HTML5Canvas的各种特性，包括渲染上下文、坐标系统、绘制图形、保存和恢复画布状态，以及变形、合成、处理图像和视频等，让读者对Canvas建立起完整的认识。随后讨论了动画循环、记忆形状、模拟运动、碰撞检测等基本而又重要的概念，带领读者温习了必要的数学和物理知识。通过带领读者动手开发“太空保龄球”和“躲避小行星”这两款小游戏，让读者掌握开发游戏的基本流程，学会响应用户操作、创造虚拟环境、循环利用对象、设计计分系统等游戏开发必备的知识。《HTML 5 Canvas基础教程》适合各层次Web设计及开发人员阅读。</p><h3 id="HTML5与CSS3基础教程（第8版）"><a href="#HTML5与CSS3基础教程（第8版）" class="headerlink" title="HTML5与CSS3基础教程（第8版）"></a>HTML5与CSS3基础教程（第8版）</h3><p>语言：中文</p><p>类型：pdf </p><p>简介：本书是风靡全球的HTML和CSS入门教程的最新版，至第6版累积销量已超过100万册，被翻译为十多种语言，长期雄踞亚马逊书店计算机图书排行榜榜首。</p><p>第8版秉承作者直观透彻、循序渐进、基础知识与案例实践紧密结合的讲授特色，采用独特的双栏图文并排方式，手把手指导读者从零开始轻松入门。相较第7版，全书2/3以上的内容进行了更新，全面反映了HTML5和CSS3的最新特色，细致阐述了响应式Web设计与移动开发等热点问题。书中主要内容包括：如何创建HTML5页面，如何使用HTML5元素，如何用CSS3为网页添加样式，如何向页面添加JavaScript代码，如何测试做好的页面并将其上传到万维网。另外，本书强调渐进增强这种网站设计方法的重要性，并将其贯穿在全书的具体实践中。</p><p>作者专为本书设计了内容丰富的配套网站htmlcssvqs.com，提供海量精彩示例、HTML与CSS元素及属性列表以及其他附加材料，方便读者随时参考与引用。</p><h3 id="HTML5揭秘"><a href="#HTML5揭秘" class="headerlink" title="HTML5揭秘"></a>HTML5揭秘</h3><p>语言：中文</p><p>类型：pdf </p><p>简介：本书全面而深入地对HTML5相关的技术进行详细介绍和剖析。“从开始到现在”道出HTML5的坎坷发展史；“HTML5特性检测”介绍了多种针对不同特性的检测方法；“本地存储”揭开了如何把“数据库”搬到客户端的神秘面纱；“离线应用”展示了脱机状态下依然能让Web应用完好无损的神奇技艺；“疯狂的表单”大秀了一把炫酷无比的下一代Web表单……它几乎涵盖了HTML5标准中描述的所有新特性。本书在以诙谐的文字结合生动的实例介绍HTML5特性的同时，还深入剖析其内部原理。让读者不仅知其然，而且知其所以然。无论是刚接触Web前端技术的新人，还是经验丰富的老手，只要是HTML5技术爱好者，都会从本书中受益。</p><h3 id="HTML5实战"><a href="#HTML5实战" class="headerlink" title="HTML5实战"></a>HTML5实战</h3><p>语言：中文</p><p>类型：pdf </p><p>简介：”学以致用“是本书最大特点，全书体现一个”用“字，学习的最终目的，就要学会灵活运用它，这本书面向WEB开发者，不论是前端开发者，还是后台程序员，都可以阅读一下本书。</p><h3 id="HTML5与CSS3权威指南"><a href="#HTML5与CSS3权威指南" class="headerlink" title="HTML5与CSS3权威指南"></a>HTML5与CSS3权威指南</h3><p>语言：中文</p><p>类型：pdf </p><p>简介：如果你是未入门或刚入门的前端新人，或是有多年工作经验的资深前端工程师，这本书都会很适合你。</p><h3 id="HTML5移动Web开发实战-扫描版"><a href="#HTML5移动Web开发实战-扫描版" class="headerlink" title="HTML5移动Web开发实战-扫描版"></a>HTML5移动Web开发实战-扫描版</h3><p>语言：中文</p><p>类型：pdf </p><p>简介：HTML5的诞生，为移动Web功能提供了更多的支持和可能性。当前，手机设备发展迅猛、屏幕尺寸各不相同、存储和性能仍有局限性，如何结合HTML5的功能，在多平台上创建高性能、响应式的移动网站，是Web开本书提供了应对这一挑战的解决方案。通过阅读本书，你将了解如何有效地利用最新的HTML5的那些针对移动网站的功能，横跨多个移动平台。</p><h3 id="HTML5移动Web开发指南"><a href="#HTML5移动Web开发指南" class="headerlink" title="HTML5移动Web开发指南"></a>HTML5移动Web开发指南</h3><p>语言：中文</p><p>类型：pdf </p><p>简介：这本书可以作为html5入门的图书，里面内容包括的太多了，所以内容讲的都不深，但是可以作为对HTML5的了解入门图书，有兴趣的同学可以看看。</p><h3 id="HTML5-amp-CSS3编程入门经典"><a href="#HTML5-amp-CSS3编程入门经典" class="headerlink" title="HTML5 &amp; CSS3编程入门经典"></a>HTML5 &amp; CSS3编程入门经典</h3><p>语言：中文</p><p>类型：pdf </p><p>简介：此书提供了对于最佳实践及技术的手把手指导。作为一本实用参考，本书深入阐述了为当今多设备多平台环境开发独特的现代网站所需的HTML及CSS最新版本。本书涵盖了丰富的内容：从为网页组织文档结构以及微调文本，到链接到其他网页或电子邮件地址，以及使用图片、音频、视频和表格。</p><h3 id="HTML5与CSS3设计模式"><a href="#HTML5与CSS3设计模式" class="headerlink" title="HTML5与CSS3设计模式"></a>HTML5与CSS3设计模式</h3><p>语言：中文</p><p>类型：pdf </p><p>简介：这本介绍了多达350种立即可用的模式。仿佛孩童堆积乐高，每种模式都可与其他模式契合使用，创造无穷的精美效果。模式名称显明易懂，方便查阅引用。每种模式、范例及相关代码都经过精心设计，便捷高效。模式讲解由浅入深，层层衔接，易于阅读。有兴趣的同学可以读读。</p><h3 id="HTML-5-CSS-3-JavaScript讲义"><a href="#HTML-5-CSS-3-JavaScript讲义" class="headerlink" title="HTML 5_CSS 3_JavaScript讲义"></a>HTML 5_CSS 3_JavaScript讲义</h3><p>语言：中文</p><p>类型：pdf </p><p>简介：此书涉及内容比较广，但是做为知识点的了解来看，还是非常不错的，简单通俗易懂，对于新知识可以做个了解。</p><h3 id="精通HTML5-CSS3-JavaScript网页设计"><a href="#精通HTML5-CSS3-JavaScript网页设计" class="headerlink" title="精通HTML5+CSS3+JavaScript网页设计"></a>精通HTML5+CSS3+JavaScript网页设计</h3><p>语言：中文</p><p>类型：pdf </p><p>简介：HTML5、CSS3和JavaScript技术是网页设计的精髓，《精通HTML5+CSS3+JavaScript网页设计》以应用实例和综合实战案例的形式逐一详解了HTML5网页设计的文档结构、文本、图像、用HTIdL5创建超链接、表格、使用表单；用CSS3设置表格和表单的样式、美化图片、背景和边框；讲述JavaScript内置对象、对象编程、JavaScript操纵CSS3、HTML5+CSS3和JavaScript的搭配应用等网页设计的方法和技巧。通过对《精通HTML5+CSS3+JavaScript网页设计》实例和综合案例的学习与演练，读者可以尽快掌握所学的知识，提高网页设计的实战能力；同时《精通HTML5+CSS3+JavaScript网页设计》在网上提供了实例源代码，可供读者直查看和调用，以便快速上手或进行二次开发。</p><hr><h2 id="Node-js"><a href="#Node-js" class="headerlink" title="Node.js"></a>Node.js</h2><h3 id="Node即学即用"><a href="#Node即学即用" class="headerlink" title="Node即学即用"></a>Node即学即用</h3><p>语言：中文</p><p>类型：pdf </p><p>简介：这本书主要讲解如何用Node构建可扩展因特网应用，是全面的实用指南类图书，除了详细介绍Node提供的API外，还用大量篇幅介绍了服务器事件驱动开发的重要概念。内容涉及跨服务器的并发连接、非阻塞I/O和事件驱动的编程、如何支持各种数据库和数据存储工具、NodeAPI的使用示例等。适合对JavaScript及编程有一定程度了解的人阅读。</p><h3 id="Node-Web开发"><a href="#Node-Web开发" class="headerlink" title="Node Web开发"></a>Node Web开发</h3><p>语言：中文</p><p>类型：pdf </p><p>简介：作为服务器端的JavaScript解释器，Node是一个轻量高效的开发平台，用于构建响应快速、高度可扩展的Web应用。它使用事件驱动和非阻塞的I/O模型，非常适合开发数据密集、对实时响应要求高的分布式应用，在微软、eBay、LinkedIn、雅虎等世界知名公司均有成功的应用。 本书是Node开发基础教程，通过大量示例介绍如何使用HTTP服务器和客户端对象、Connect和Express应用框架、异步执行算法，以及如何结合使用SQL和MongoDB数据库。另外，本书同时针对开发和部署环境给出了实用的Node安装建议，介绍了HTTP服务器和客户端应用的开发，阐述了很多Node使用方式，包括在应用中使用数据库存储引擎，以及在有无Connect/Express Web应用框架的情况下开发网站的方法。本书还介绍了Node的CommonJS模块系统，帮助开发人员实现一些重要的面向对象设计方案。</p><pre><code>本书适合具有一定JavaScript和Web应用开发基础知识、打算使用服务器端JavaScript开发高性能Web应用的开发人员阅读。</code></pre><h3 id="Node-js开发指南"><a href="#Node-js开发指南" class="headerlink" title="Node.js开发指南"></a>Node.js开发指南</h3><p>语言：中文</p><p>类型：pdf </p><p>简介：不少人在入门时总要经历一个痛苦的思维转变过程，给学习带来巨大的障碍。 而这本书的目的就是帮助大家扫清这些障碍，学会使用Node.js进行Web后端开发，同时掌握事件驱动的异步式编程风格，以便进一步利用Node.js的高级特性。本书适合具有一定JavaScript和Web应用开发基础知识、打算使用服务器端JavaScript开发高性能Web应用的开发人员阅读。</p><hr><h2 id="Angular-Js"><a href="#Angular-Js" class="headerlink" title="Angular.Js"></a>Angular.Js</h2><h3 id="《AngularJS权威教程》"><a href="#《AngularJS权威教程》" class="headerlink" title="《AngularJS权威教程》"></a>《AngularJS权威教程》</h3><p>语言：中文</p><p>类型：pdf<br>简介：本书是资深全栈工程师的代表性著作，由拥有丰富经验的国内AngularJS技术专家执笔翻译，通俗易懂、全面深入，是学习AngularJS不可错过的经典之作。无论是出于工作需要，还是好奇心的驱使，只要你想彻底理解AngularJS，本书都会让你感到满意。</p><h3 id="AngularJS开发下一代Web应用"><a href="#AngularJS开发下一代Web应用" class="headerlink" title="AngularJS开发下一代Web应用"></a>AngularJS开发下一代Web应用</h3><p>语言：中文</p><p>类型：pdf </p><p>简介：AngularJS是一款来自Google的前端JS框架，它的核心特性有：MVC、双向数据绑定、指令和语义化标签、模块化工具、依赖注入、HTML模板，以及对常用工具的封装，例如$http、$cookies、$location等。AngularJS框架的体积非常小，但是设计理念和功能却非常强大，值得前端开发者深入学习。</p><h3 id="AngularJS实战"><a href="#AngularJS实战" class="headerlink" title="AngularJS实战"></a>AngularJS实战</h3><p>语言：中文</p><p>类型：pdf </p><p>简介：Angular JS是目前最热门的一种前端开发框架，之前有很多人来问过我关于Angular js的学习资料，但是因为时间原因，真的没有时间整理，今天跟大家分享这边本书，希望对大家去看看，后面还有很多的视频，我抽空整理分享给各位。</p><hr><p>MongoDB</p><h3 id="MongoDB大数据处理权威指南-第2版"><a href="#MongoDB大数据处理权威指南-第2版" class="headerlink" title="MongoDB大数据处理权威指南  第2版"></a>MongoDB大数据处理权威指南  第2版</h3><p>语言：中文</p><p>类型：pdf </p><p>简介：来自10gen的David Hows以及具有丰富MongoDB开发经验的Peter Membrey和Eelco Plugge，组成了本书的专家团队，他们在本书中分享了自己的专业知识和经验，帮助你了解成为MongoDB专家所需的所有知识。</p><hr><h2 id="算法"><a href="#算法" class="headerlink" title="算法"></a>算法</h2><h3 id="啊哈！算法"><a href="#啊哈！算法" class="headerlink" title="啊哈！算法"></a>啊哈！算法</h3><p>语言：中文</p><p>类型：pdf </p><p>简介：这是一本有趣的算法书。和别的算法书比较，如果硬要说它有什么特点的话，那就是你能看懂它。非常适合入门。</p><p>这是一本充满智慧和趣味的算法入门书。没有枯燥的描述，没有难懂的公式，一切以实际应用为出发点，通过幽默的语言配以可爱的插图来讲解算法。你更像是在阅读一个个轻松的小故事或是在玩一把趣味解谜游戏，在轻松愉悦中便掌握算法精髓，感受算法之美。</p><h3 id="算法帝国"><a href="#算法帝国" class="headerlink" title="算法帝国"></a>算法帝国</h3><p>语言：中文</p><p>类型：pdf </p><p>简介：作者为我们大家讲述算法和机器学习技术如何悄然接管人类社会，带我们走进一个算法统治的世界。这本书适合任何对算法原理、数据分析感兴趣的同学阅读。</p><h3 id="算法之道-第二版"><a href="#算法之道-第二版" class="headerlink" title="算法之道(第二版)"></a>算法之道(第二版)</h3><p>语言：中文</p><p>类型：pdf </p><p>简介：这本书追求是算法背后的逻辑，是一本启示书，而不是一本包罗万象的算法大全。适合对算法有兴趣的同学阅读。</p><h3 id="云计算宝典-技术与实践"><a href="#云计算宝典-技术与实践" class="headerlink" title="云计算宝典 技术与实践"></a>云计算宝典 技术与实践</h3><p>语言：中文</p><p>类型：pdf </p><p>简介：通过阅读这本书，可以系统地了解云计算的产生背景、发展现状、技术要点和未来趋势，更加准确地把握业界前沿的科技和理念，认清信息技术发展的大脉络，形成适应于产业未来的大局观。同时，将为您打开一扇通往未来的窗户，帮助您拓宽视野，完善知识结构，储备适用于下一代信息产业的技能和智慧。</p><h3 id="学习JavaScript数据结构与算法"><a href="#学习JavaScript数据结构与算法" class="headerlink" title="学习JavaScript数据结构与算法"></a>学习JavaScript数据结构与算法</h3><p>语言：中文</p><p>类型：pdf </p><p>简介：这边书比较薄，先介绍了JavaScript语言的基础知识，然后讨论了数组、栈、队列、链表、集合、字典、散列表、树、图等数据结构，之后探讨了各种排序和搜索算法，包括冒泡排序、选择排序、插入排序、归并排序、快速排序、顺序搜索、二分搜索，以及动态规划和贪心算法等常用的高级算法及相关知识。特别适合入门。</p><hr><h2 id="DOJO"><a href="#DOJO" class="headerlink" title="DOJO"></a>DOJO</h2><h3 id="DOJO权威指南"><a href="#DOJO权威指南" class="headerlink" title="DOJO权威指南"></a>DOJO权威指南</h3><p>语言：中文</p><p>类型：pdf </p><p>简介：通过使用Dojo这个工业强度的JavaScript工具箱，我们可以比使用其他任何Ajax框架更高效、更容易地创建JavaScript或Ajax驱动的应用程序和站点。有兴趣的同学可以阅读。</p><hr><h2 id="DynamicHTML"><a href="#DynamicHTML" class="headerlink" title="DynamicHTML"></a>DynamicHTML</h2><h3 id="DynamicHTML权威指南"><a href="#DynamicHTML权威指南" class="headerlink" title="DynamicHTML权威指南"></a>DynamicHTML权威指南</h3><p>语言：中文</p><p>类型：pdf </p><p>简介：这本书为HTML、XHTML、CSS、DOM和核心JavaScript的标签、属性、对象、方法、事件等提供即时参考。可以加速你在Web页面中增添高端功能的整个进程。对所有正在致力于创建动态Web内容的开发者而言，这本畅销书绝对值得收藏与阅读。</p><hr><h2 id="php"><a href="#php" class="headerlink" title="php"></a>php</h2><h3 id="PHP经典实例-第二版"><a href="#PHP经典实例-第二版" class="headerlink" title="PHP经典实例(第二版)"></a>PHP经典实例(第二版)</h3><p>语言：中文</p><p>类型：pdf </p><p>简介：从初学者常见的问题到高级Web编程技术，这本包含了丰富的、具有实际应用价值的实例图书，可以满足使用PHP生成动态web内容的任何人的需要。而且，每个实例的讨论部分都浸透着对每个PHP开发人员极为有益的理念。</p><hr><h2 id="代码实践改善与规范"><a href="#代码实践改善与规范" class="headerlink" title="代码实践改善与规范"></a>代码实践改善与规范</h2><h3 id="代码阅读方法与实践"><a href="#代码阅读方法与实践" class="headerlink" title="代码阅读方法与实践"></a>代码阅读方法与实践</h3><p>语言：中文</p><p>类型：pdf </p><p>简介：本书围绕代码阅读，详细论述了相关的知识与技能。“他山之石、可以攻玉”，通过仔细阅读并学习本书，可以快速地提高读者代码阅读的技能与技巧，进而从现有的优秀代码、算法、构架、设计中汲取营养，提高自身的开发与设计能力。本书适用于对程序设计的基本知识有一定了解，并想进一步提高自身开发能力的同学。</p><h3 id="编写高质量代码：Web前端开发修炼之道"><a href="#编写高质量代码：Web前端开发修炼之道" class="headerlink" title="编写高质量代码：Web前端开发修炼之道"></a>编写高质量代码：Web前端开发修炼之道</h3><p>语言：中文</p><p>类型：pdf </p><p>简介：本书的核心内容是围绕Web前端开发的三大技术要素——HTML、CSS和JavaScript来深入地探讨编写高质量的HTML代码、CSS代码和JavaScript代码的方法、技巧、规范和最佳实践，从而为编写易于维护的Web前端代码打下坚实的基础。这不是一本单纯的“技术”书籍，没有系统地讲解Web前端开发的基础知识，它更专注于“技巧”，探索如何为“技术”提供最佳“技巧”。</p><h3 id="重构-改善既有代码的设计"><a href="#重构-改善既有代码的设计" class="headerlink" title="重构 改善既有代码的设计"></a>重构 改善既有代码的设计</h3><p>语言：中文</p><p>类型：pdf </p><p>简介：这本书凝聚了软件开发社区专家多年摸索而获得的宝贵经验，拥有不因时光流逝而磨灭的价值。今天，无论是重构本身，业界对重构的理解，还是开发工具对重构的支持力度，都与本书最初出版时不可同日而语，但书中所蕴涵的意味和精华，依然值得反复咀嚼，而且往往能够常读常新。</p><hr><h2 id="Erlang"><a href="#Erlang" class="headerlink" title="Erlang"></a>Erlang</h2><h3 id="Erlang程序设计-第2版"><a href="#Erlang程序设计-第2版" class="headerlink" title="Erlang程序设计(第2版)"></a>Erlang程序设计(第2版)</h3><p>语言：中文</p><p>类型：pdf </p><p>简介：此书由Erlang之父Joe Armstrong编写，是毋庸置疑的经典著作。书中重点介绍如何编写并发和分布式的Erlang程序以及如何在多核CPU上自动加速程序，并深入地讨论了开发Erlang应用中至关重要的文件和网络编程、OTP、ETS和DETS等主题。</p><hr><h2 id="程序员-amp-职业规划"><a href="#程序员-amp-职业规划" class="headerlink" title="程序员&amp;职业规划"></a>程序员&amp;职业规划</h2><h3 id="我编程，我快乐－程序员职业规划之道"><a href="#我编程，我快乐－程序员职业规划之道" class="headerlink" title="我编程，我快乐－程序员职业规划之道"></a>我编程，我快乐－程序员职业规划之道</h3><p>语言：中文</p><p>类型：pdf </p><p>简介：在当今的IT职场取得成功，必须像经营企业那样对待你的事业。这本书之前在QQ群里跟大家分享过，在书中，将学到如何规划自己的职业生涯，让它向着你选择的目标前进，使人生更快乐、更美好。</p><h3 id="程序员的思维修炼-开发认知潜能的九堂课"><a href="#程序员的思维修炼-开发认知潜能的九堂课" class="headerlink" title="程序员的思维修炼 开发认知潜能的九堂课"></a>程序员的思维修炼 开发认知潜能的九堂课</h3><p>语言：中文</p><p>类型：pdf </p><p>简介：这本书解释了为什么软件开发是一种精神活动，思考如何解决问题，并就开发人员如何能更好地开发软件进行了评论。书中不仅给出了一些理论上的答案，同时提供了大量实践技术和窍门。这本书适合各层次软件开发人员阅读。</p><hr>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;整理的100本优质前端开发书籍,拿走不谢&lt;br&gt;
    
    </summary>
    
      <category term="书籍" scheme="https://yveda.github.io/categories/%E4%B9%A6%E7%B1%8D/"/>
    
    
      <category term="前端开发书籍" scheme="https://yveda.github.io/tags/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91%E4%B9%A6%E7%B1%8D/"/>
    
  </entry>
  
  <entry>
    <title>Parcel新一代打包神器</title>
    <link href="https://yveda.github.io/2018/01/01/parcel-%E6%96%B0%E4%B8%80%E4%BB%A3%E6%89%93%E5%8C%85%E7%A5%9E%E5%99%A8/"/>
    <id>https://yveda.github.io/2018/01/01/parcel-新一代打包神器/</id>
    <published>2018-01-01T13:51:29.000Z</published>
    <updated>2018-06-02T04:06:41.548Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><ul><li>前端未来的发展前景是全栈（结合java，php），而不是单纯前端的全栈</li><li>使用node.js能开发区块链</li><li>it发展很快，跳出循环看世界</li></ul><a id="more"></a><ul><li>短短五年时间跳了五个台阶，基本上一年一个新技术<ul><li>2013-2018<ul><li>pc端 - 移动端h5 - 大数据 - 人工智能 - 区块链</li><li>也就是IT(信息技术)向DT(数据技术)的转变</li><li>还有物联网 智能家居 人工智能 中控系统 数据可视化</li></ul></li></ul></li></ul><h2 id="parcel介绍"><a href="#parcel介绍" class="headerlink" title="parcel介绍"></a>parcel介绍</h2><h3 id="parcel定义"><a href="#parcel定义" class="headerlink" title="parcel定义"></a>parcel定义</h3><p> <a href="https://parceljs.org" target="_blank" rel="noopener">parcel官网</a><br> 新一代web打包神器，适用于经验不同的开发者。它利用多核处理提供了极快的速度，并且不需要任何配置。跟webpack类似，webpack很复杂要配置很多东西，但是parcel是简化版本的webpack</p><h3 id="parcel的优点与缺点"><a href="#parcel的优点与缺点" class="headerlink" title="parcel的优点与缺点"></a>parcel的优点与缺点</h3><ul><li>优点<ul><li>无需配置</li><li>极速打包</li><li>自动转换<ul><li>内置了常见场景的构建方法及其依赖，无需再安装各种依赖</li></ul></li><li>模块热替换<ul><li>默认支持模块热替换，真正做到开箱即用</li></ul></li></ul></li><li>缺点<ul><li>不支持SourceMap：在开发模式下，Parcel也不会输出SourceMap,目前只能去调试可读性极低的代码</li><li>不支持剔除无效代码（TreeShaking）;很多时候我们只用到了库中的一个函数，结果parcel把整个库都打包了进来</li><li>一些依赖会让Parcel出错；当你的项目依赖了一些npm上面的模块时，有些npm模块会让parcel出错误</li></ul></li></ul><h3 id="使用Parcel的场景"><a href="#使用Parcel的场景" class="headerlink" title="使用Parcel的场景"></a>使用Parcel的场景</h3><p>目前Parcel只能用来构建用于运行在浏览器中的网页，这也是他的出发点和专注点，在软件行业不可能既简单又可以简单适应各种场景的方案，就算所谓的人工智能也许会解决这个问题，但人工智能不能保证百分百的正确性。</p><h3 id="如何安装npm包"><a href="#如何安装npm包" class="headerlink" title="如何安装npm包"></a>如何安装npm包</h3><ol><li>全局安装：npm install <package name=""> -g</package></li><li>本地安装：npm install <package name=""> –save-dev (开发依赖)</package></li></ol><h3 id="首先通过-Yarn-或者-npm-安装-Parcel"><a href="#首先通过-Yarn-或者-npm-安装-Parcel" class="headerlink" title="首先通过 Yarn 或者 npm 安装 Parcel"></a>首先通过 Yarn 或者 npm 安装 Parcel</h3><p>Yarn:</p><blockquote><ul><li>yarn global add parcel-bundler</li></ul></blockquote><p>npm:</p><blockquote><ul><li>npm install -g parcel-bundler  </li></ul></blockquote><h3 id="前端开发方式介绍："><a href="#前端开发方式介绍：" class="headerlink" title="前端开发方式介绍："></a>前端开发方式介绍：</h3><ul><li>传统开发方式：<ul><li>需求分析-设计-编码-测试-运行-维护（类似<strong>串联</strong>）<ul><li>特点：生产效率以及维护效率非常缓慢，得一个个去查找文件，去更改再上线。</li></ul></li></ul></li><li>现代化前端开发方式:<ul><li>模块化 工程化 组件化 全栈化<ul><li>特点：提高开发效率    <ul><li>开发/维护 阶段是非常有必要的<ul><li>开发：面对复杂的js和html越来越多了，我们之前只能做到手动去引入依赖，如何让文件之间的关系                              变得可依赖呢？或者让文件之间自动相关联。这就是所说的工程化，在这之前还要做到模块化（<strong>组件和模块的区别</strong>：区别在<strong>颗粒度</strong>方面，模块化可以理解为零件，比如轮胎上面的螺丝钉，组件就是轮胎）。</li></ul></li></ul></li></ul></li></ul></li></ul><h3 id="模块组件的核心思想"><a href="#模块组件的核心思想" class="headerlink" title="模块组件的核心思想"></a>模块组件的核心思想</h3><p>针对开发和维护阶段的，管理复杂的js，html文件，然后构建依赖关系图。之后我们进行文件更改的时候，我们直接构件图，就可以直接进行定位。传统方式只有左边这一块没有右边这一块。<br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://github.com/Yveda/-/blob/master/projectImage/parcel/clipboard.png?raw=true" alt="image" title="">                </div>                <div class="image-caption">image</div>            </figure></p><h3 id="webpack使用"><a href="#webpack使用" class="headerlink" title="webpack使用"></a>webpack使用</h3><p>打包，编译，开发环境应用是非常麻烦的，因为要借助很多插件，不管是引入插件还是入口出口都需要自己配置，那parcel就不需要用到配置文件了（webpack里面的配置文件是webpack.config.js）</p><h3 id="webpack和parccel打包速度对比"><a href="#webpack和parccel打包速度对比" class="headerlink" title="webpack和parccel打包速度对比"></a>webpack和parccel打包速度对比</h3><pre><code>parcel远远优于webpack(前者耗费时间是后面的三分之一)</code></pre><h3 id="parcel打包命令"><a href="#parcel打包命令" class="headerlink" title="parcel打包命令"></a>parcel打包命令</h3><p>parcel 主文件入口<br>比如说是 parcel index.html（全局安装可以用这个命令）<br>如果不是全局安装使用这条命令就会出现’parcel’不是内部或者外部命令，也不是可运行或批处理文件。解决方法是建立一个package.json文件。</p><h3 id="在你正在使用的项目目录下创建一个-package-json-文件"><a href="#在你正在使用的项目目录下创建一个-package-json-文件" class="headerlink" title="在你正在使用的项目目录下创建一个 package.json 文件"></a>在你正在使用的项目目录下创建一个 package.json 文件</h3><blockquote><p>yarn init -y</p></blockquote><p>or</p><blockquote><p>npm init -y</p></blockquote><h3 id="在packjson-json文件里面配置打包命令："><a href="#在packjson-json文件里面配置打包命令：" class="headerlink" title="在packjson.json文件里面配置打包命令："></a>在packjson.json文件里面配置打包命令：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&quot;scripts&quot;: &#123;</span><br><span class="line">  &quot;test&quot;: &quot;echo \&quot;Error: no test specified\&quot; &amp;&amp; exit 1&quot;,</span><br><span class="line">  &quot;build&quot;: &quot;parcel index.html&quot;</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><p>然后在根目录下面新建index.html文件和在app文件夹里面新建index.js文件，然后引入js</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">//index.html</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">  &lt;script src=&quot;./app/index.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">//index.js</span><br><span class="line">console.log(&quot;hello world&quot;);</span><br></pre></td></tr></table></figure><h3 id="接下来整合html和js"><a href="#接下来整合html和js" class="headerlink" title="接下来整合html和js"></a>接下来整合html和js</h3><h4 id="执行打包命令：npm-run-build"><a href="#执行打包命令：npm-run-build" class="headerlink" title="执行打包命令：npm run build"></a>执行打包命令：npm run build</h4><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://github.com/Yveda/-/blob/master/projectImage/parcel/%E6%89%93%E5%8C%85%E5%91%BD%E4%BB%A4.png?raw=true" alt="image" title="">                </div>                <div class="image-caption">image</div>            </figure><h4 id="可以看见他创建了一个开发的服务器环境"><a href="#可以看见他创建了一个开发的服务器环境" class="headerlink" title="可以看见他创建了一个开发的服务器环境"></a>可以看见他创建了一个开发的服务器环境</h4><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://github.com/Yveda/-/blob/master/projectImage/parcel/%E6%8E%A7%E5%88%B6%E5%8F%B0.png?raw=true" alt="image" title="">                </div>                <div class="image-caption">image</div>            </figure><h4 id="真正部署的是dist文件夹下面的"><a href="#真正部署的是dist文件夹下面的" class="headerlink" title="真正部署的是dist文件夹下面的"></a>真正部署的是dist文件夹下面的</h4><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://github.com/Yveda/-/blob/master/projectImage/parcel/element.png?raw=true" alt="image" title="">                </div>                <div class="image-caption">image</div>            </figure><h4 id="dist文件夹"><a href="#dist文件夹" class="headerlink" title="dist文件夹"></a>dist文件夹</h4><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://github.com/Yveda/-/blob/master/projectImage/parcel/%E6%96%87%E4%BB%B6%E5%A4%B9.png?raw=true" alt="image" title="">                </div>                <div class="image-caption">image</div>            </figure><h4 id="index-html："><a href="#index-html：" class="headerlink" title="index.html："></a>index.html：</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;html&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">  &lt;script src=&quot;/app.37d33215.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h4 id="打包的文件"><a href="#打包的文件" class="headerlink" title="打包的文件"></a>打包的文件</h4><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://github.com/Yveda/-/blob/master/projectImage/parcel/%E6%96%87%E4%BB%B6%E5%A4%B9.png?raw=true" alt="image" title="">                </div>                <div class="image-caption">image</div>            </figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">console.log(&quot;hello world&quot;);</span><br><span class="line">&#125;,&#123;&#125;],6:[function(require,module,exports) &#123;</span><br><span class="line"></span><br><span class="line">var OVERLAY_ID = &apos;__parcel__error__overlay__&apos;;</span><br><span class="line"></span><br><span class="line">var global = (1, eval)(&apos;this&apos;);</span><br><span class="line">var OldModule = module.bundle.Module;</span><br></pre></td></tr></table></figure><h3 id="后期怎么进行维护："><a href="#后期怎么进行维护：" class="headerlink" title="后期怎么进行维护："></a>后期怎么进行维护：</h3><p>就不需要像传统方式一样，一个个去找，只需要这个文件在什么地方，我们进行文件名的更改，然后再进行布局就行了。<br>例如改下app/index.js<br>console.log(“welcome to see you”);<br>然后index.html的控制台里面的数值也发生对应变化，专有名词解释叫<strong>模块热替换</strong>，就是我改变文件内容，前台会自动更新，不需要手动去刷新。</p><h3 id="parcel的自动转化的特点："><a href="#parcel的自动转化的特点：" class="headerlink" title="parcel的自动转化的特点："></a>parcel的自动转化的特点：</h3><p>场景:js的代码兼容性处理，用es6能提高开发效率，但是es6的兼容不好，我们现在用babel-loader来处理es6的兼容性，babel-loader他是个预处理器，如果我们用webpack需要去下载babel-loader，并且还需呀去配置解析，但是用parcel就不需要。<br>假设在index.js里面写个类，在es5里面没有类的概念。</p><h4 id="index-js："><a href="#index-js：" class="headerlink" title="index.js："></a>index.js：</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">class Point&#123;</span><br><span class="line">constructor() &#123;</span><br><span class="line">this.name = &quot;yveda&quot;</span><br><span class="line">this.age = 18</span><br><span class="line">&#125;</span><br><span class="line">go()&#123;</span><br><span class="line">console.log(`$&#123;this.name&#125;的年龄是$&#123;this.age&#125;岁`)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">const point = new Point()//实例化一下</span><br><span class="line">point.go()//执行一下</span><br></pre></td></tr></table></figure><h4 id="然后localhost-1234-的控制台里面显示的是："><a href="#然后localhost-1234-的控制台里面显示的是：" class="headerlink" title="然后localhost:1234  的控制台里面显示的是："></a>然后localhost:1234  的控制台里面显示的是：</h4><p>yveda的年龄是18岁</p><h4 id="而且在app-37d33215-js里面："><a href="#而且在app-37d33215-js里面：" class="headerlink" title="而且在app.37d33215.js里面："></a>而且在app.37d33215.js里面：</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">//含有es5的代码，他改成了构造函数的类型 </span><br><span class="line">var Point = function () &#123;</span><br><span class="line">function Point() &#123;</span><br><span class="line">_classCallCheck(this, Point);</span><br><span class="line"></span><br><span class="line">this.name = &quot;yveda&quot;;</span><br><span class="line">this.age = 18;</span><br><span class="line">&#125;</span><br><span class="line">_createClass(Point, [&#123;</span><br><span class="line">key: &quot;go&quot;,</span><br><span class="line">value: function go() &#123;</span><br><span class="line">console.log(this.name + &quot;\u7684\u5E74\u9F84\u662F&quot; + this.age + &quot;\u5C81&quot;);</span><br><span class="line">&#125;</span><br><span class="line">&#125;]);</span><br><span class="line">return Point;</span><br><span class="line">&#125;();</span><br><span class="line">//所以这个parcel非常强大的一点，不需要跟wepack一样去下载很多插件</span><br></pre></td></tr></table></figure><h4 id="再举个例子："><a href="#再举个例子：" class="headerlink" title="再举个例子："></a>再举个例子：</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">//在index.js后面添</span><br><span class="line">const arr = [1,2,3];</span><br><span class="line">console.log(...arr)</span><br></pre></td></tr></table></figure><p>然后再次进行打包npm run build<br>在里面app.37d33215.js找到如下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">var arr = [1, 2, 3];</span><br><span class="line">(_console = console).log.apply(_console, arr);</span><br><span class="line">&#125;,&#123;&#125;],4:[function(require,module,exports) &#123;</span><br></pre></td></tr></table></figure><p>发现他把这个点转化成apply了，所以这就是parcel的自动转换，es6自动转换为es5</p><h3 id="css的引入"><a href="#css的引入" class="headerlink" title="css的引入"></a>css的引入</h3><p>现在我们做组件和模块，很少把js和css引入当前的html当中，在组件化开发中，js和css一般都放在一起的，那怎么让两个之间相关联呢？<br>如果使用webpack的话，需要一个css-loader，style-loader,还有要import css。</p><h4 id="新建app-css-style-css"><a href="#新建app-css-style-css" class="headerlink" title="新建app/css/style.css:"></a>新建app/css/style.css:</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">body&#123;</span><br><span class="line">margin:0;</span><br><span class="line">background: #008666;</span><br><span class="line">color: #000;</span><br><span class="line">&#125;</span><br><span class="line">.box&#123;</span><br><span class="line">width: 220px;</span><br><span class="line">height: 200px;</span><br><span class="line">border:3px solid red;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="然后在index-js里面引入style-css添加一个块"><a href="#然后在index-js里面引入style-css添加一个块" class="headerlink" title="然后在index.js里面引入style.css添加一个块"></a>然后在index.js里面引入style.css添加一个块</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">import &quot;../css/style.css&quot;;</span><br><span class="line">const oDiv = document.createElement(&apos;div&apos;);</span><br><span class="line">oDiv.className = &apos;box&apos;;</span><br><span class="line">document.body.appendChild(oDiv);</span><br><span class="line"></span><br><span class="line">class Point&#123;</span><br><span class="line">constructor() &#123;</span><br><span class="line">this.name = &quot;yveda&quot;</span><br><span class="line">this.age = 18</span><br><span class="line">&#125;</span><br><span class="line">go()&#123;</span><br><span class="line">console.log(`$&#123;this.name&#125;的年龄是$&#123;this.age&#125;岁`)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">const point = new Point()//实例化一下</span><br><span class="line">point.go()//执行一下</span><br><span class="line"></span><br><span class="line">const arr = [1,2,3];</span><br><span class="line">console.log(...arr)</span><br></pre></td></tr></table></figure><p>进行打包 npm run build<br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://github.com/Yveda/-/blob/master/projectImage/parcel/%E7%BA%A2%E8%89%B2%E8%BE%B9%E6%A1%86.png?raw=true" alt="image" title="">                </div>                <div class="image-caption">image</div>            </figure><br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://github.com/Yveda/-/blob/master/projectImage/parcel/%E8%80%8C%E5%A4%96%E7%9A%84%E6%8E%A7%E5%88%B6%E5%8F%B0.png?raw=true" alt="image" title="">                </div>                <div class="image-caption">image</div>            </figure></p><h4 id="进入控制台"><a href="#进入控制台" class="headerlink" title="进入控制台"></a>进入控制台</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;html&gt;</span><br><span class="line">&lt;link rel=&quot;stylesheet&quot; href=&quot;/style.aa408015.css&quot;&gt;</span><br><span class="line">&lt;script src=&quot;/style.aa408015.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">  &lt;script src=&quot;/js.2a519707.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p>右击/style.aa408015.css，选择open in new table，发现样式已经引入进来了</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">body&#123;</span><br><span class="line">margin:0;</span><br><span class="line">background: #333333;</span><br><span class="line">color: #000;</span><br><span class="line">&#125;</span><br><span class="line">.box&#123;</span><br><span class="line">width: 220px;</span><br><span class="line">height: 200px;</span><br><span class="line">border:3px solid red;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="在新建一个app-js-app-js"><a href="#在新建一个app-js-app-js" class="headerlink" title="在新建一个app/js/app.js"></a>在新建一个app/js/app.js</h4><p>并将index.js里面的东西清空，将原先index.js里面的内容全部剪切到app.js里面<br>然后将app.js导入到index.js里面</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">import Print from &apos;./app.js&apos;;</span><br><span class="line">Print();</span><br></pre></td></tr></table></figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://github.com/Yveda/-/blob/master/projectImage/parcel/%E4%B8%A4%E4%B8%AA%E7%BA%A2%E8%89%B2%E8%BE%B9%E6%A1%86.png?raw=true" alt="image" title="">                </div>                <div class="image-caption">image</div>            </figure><h3 id="开发和部署"><a href="#开发和部署" class="headerlink" title="开发和部署"></a>开发和部署</h3><ul><li>开发的问题<ul><li>怎么提高开发效率(协同开发)</li><li>怎么降低维护难度<ul><li>怎么解决？<ul><li>制定开发规范(<a href="http://tgideas.qq.com/doc/" target="_blank" rel="noopener">腾讯开发规范</a>)</li><li>模块化/组件化</li></ul></li></ul></li></ul></li></ul><ul><li>部署<ul><li>代码检查</li><li>压缩代码</li><li>增量更新</li><li>单元测试</li></ul></li></ul><p>怎么解决？<br>构建(全部文件进行编译)和编译(单文件编译)，<br>我用parcel和webpack这种就是构建</p><h3 id="传统前端工程体系："><a href="#传统前端工程体系：" class="headerlink" title="传统前端工程体系："></a>传统前端工程体系：</h3><ol><li>应用层：image，css，js等</li><li>server层：CDN，tpl，http….</li><li>QA层：集成测试</li><li>开发层：单元测试，image,js，sass,less,java,php,python…</li><li>数据层：DB</li></ol><h3 id="大前端-前端工程体系"><a href="#大前端-前端工程体系" class="headerlink" title="大前端 前端工程体系"></a>大前端 前端工程体系</h3><ol><li>应用层：image，css，js等</li><li>server层：CDN，tpl，http….</li><li>QA层：集成测试</li><li>开发层：前后端分离，使用node.js跟服务器端进行数据的交互。</li><li>数据层：DB</li></ol><p>为什么现在大前端能做这些项目的构建打包，集成测试是因为有了node.js，他改变了前端，通过这个东西他跟后台，数据库做交互。</p><hr>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;前端未来的发展前景是全栈（结合java，php），而不是单纯前端的全栈&lt;/li&gt;
&lt;li&gt;使用node.js能开发区块链&lt;/li&gt;
&lt;li&gt;it发展很快，跳出循环看世界&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="项目构建部署" scheme="https://yveda.github.io/categories/%E9%A1%B9%E7%9B%AE%E6%9E%84%E5%BB%BA%E9%83%A8%E7%BD%B2/"/>
    
    
      <category term="Parcel" scheme="https://yveda.github.io/tags/Parcel/"/>
    
  </entry>
  
  <entry>
    <title>hexo主题及其文件配置</title>
    <link href="https://yveda.github.io/2017/12/09/hexo02/"/>
    <id>https://yveda.github.io/2017/12/09/hexo02/</id>
    <published>2017-12-09T15:51:29.000Z</published>
    <updated>2018-06-02T04:12:33.108Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>如何给博客披上一层靓丽的皮肤</p><a id="more"></a><h2 id="配置主题文件"><a href="#配置主题文件" class="headerlink" title="配置主题文件"></a>配置主题文件</h2><h3 id="设置头像"><a href="#设置头像" class="headerlink" title="设置头像"></a>设置头像</h3><p>在站点配置文件中,添加avatar字段,值设置成头像的链接地址<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">avatar: /images/avatar.png</span><br><span class="line">路径主题文件source/images目录下</span><br></pre></td></tr></table></figure></p><h3 id="设置网站图标-注意必须为ico格式"><a href="#设置网站图标-注意必须为ico格式" class="headerlink" title="设置网站图标(注意必须为ico格式)"></a>设置网站图标(注意必须为ico格式)</h3><p>在主题配置文件中,把favicon的注释去掉即可<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Put your favicon.ico into `hexo-site/source/` directory.</span></span><br><span class="line">favicon: images/favicon.ico</span><br><span class="line">//路径主题文件source/images目录下</span><br></pre></td></tr></table></figure></p><h3 id="自定义代码高亮"><a href="#自定义代码高亮" class="headerlink" title="自定义代码高亮"></a>自定义代码高亮</h3><p>在hexo-theme-shana\source\css_partial\highlight.styl<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$code-block</span><br><span class="line">  border-left: 5px solid #eb3c3c</span><br><span class="line">  background: #9d</span><br><span class="line">  margin: 0 article-padding * -1</span><br><span class="line">  padding: 15px article-padding</span><br><span class="line">  overflow: auto</span><br><span class="line">  color: highlight-foreground</span><br><span class="line">  line-height: font-size * line-height</span><br></pre></td></tr></table></figure></p><h3 id="自定义背景图片"><a href="#自定义背景图片" class="headerlink" title="自定义背景图片"></a>自定义背景图片</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo-theme-shana\source\plugin\bganimation\bg.css</span><br><span class="line">替换里面的图片url就可以了</span><br></pre></td></tr></table></figure><h3 id="hexo设置网站的图标Favicon"><a href="#hexo设置网站的图标Favicon" class="headerlink" title="hexo设置网站的图标Favicon"></a>hexo设置网站的图标Favicon</h3><p>具体方法实现:<br>ico图标 32*32 去别的网站下载或者制作，并将图标名称改为 favicon.ico，然后把图标放在/themes/next/source/images里，并且修改主题配置文件：<br>favicon: images/favicon.ico<br>//路径主题文件source/images目录下</p><h3 id="文章打赏功能"><a href="#文章打赏功能" class="headerlink" title="文章打赏功能"></a>文章打赏功能</h3><p> 越来越多的平台（微信公众平台，新浪微博，简书，百度打赏等）支持打赏功能，付费阅读时代越来越近，Next特此增加了打赏功能，支持微信打赏和支付宝打赏。 只需要复制下面的代码添加到主题配置文件中即可开启该功能。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">reward_comment: 坚持原创技术分享，您的支持将鼓励我继续创作！</span><br><span class="line">wechatpay: 图片链接</span><br><span class="line">alipay: 图片链接</span><br></pre></td></tr></table></figure><h3 id="设置友情链接"><a href="#设置友情链接" class="headerlink" title="设置友情链接"></a>设置友情链接</h3><p>在主题文件开启links_title和links即可</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">title</span><br><span class="line">links_title: 前端工具箱</span><br><span class="line">links_layout: block</span><br><span class="line">links_layout: inline</span><br><span class="line">links:</span><br><span class="line">   代码压缩: http://tool.oschina.net/jscompress</span><br><span class="line">   CSS整理: http://example</span><br></pre></td></tr></table></figure><h3 id="添加标签页面"><a href="#添加标签页面" class="headerlink" title="添加标签页面"></a>添加标签页面</h3><p>使用： hexo new page tags 新建一个 标签页面（或者直接在文件夹里面新建一个tags文件夹里面包含一个index.md文件）</p><p>主题的 _config.yml 文件中的 menu 中进行匹配<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">menu:</span><br><span class="line">  home: /      //主页</span><br><span class="line">  categories: /categories //分类</span><br><span class="line">  archives: /archives   //归档</span><br><span class="line">  tags: /tags   //标签                  （添加此行即可）</span><br><span class="line">  about: /about   //关于</span><br></pre></td></tr></table></figure></p><p>底下代码是一篇包含 标签 文章的例子：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">title: 标签测试</span><br><span class="line">tags:</span><br><span class="line">  - Testing                   （这个就是文章的标签了）</span><br><span class="line">  - Another Tag               （这个就是文章的标签了）</span><br></pre></td></tr></table></figure></p><p>tags文件夹里面是index.md文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">title: tags</span><br><span class="line">date: 2014-12-22 </span><br><span class="line">type: &quot;tags&quot;</span><br><span class="line">layout: &quot;tags&quot;</span><br></pre></td></tr></table></figure><h3 id="添加分类页面"><a href="#添加分类页面" class="headerlink" title="添加分类页面"></a>添加分类页面</h3><p>使用： hexo new page categories 新建一个 分类 页面。 </p><p>主题的 _config.yml 文件中的 menu 中进行匹配<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">menu:</span><br><span class="line">  home: /      //主页</span><br><span class="line">  categories: /categories //分类        （添加此行即可）</span><br><span class="line">  archives: /archives   //归档</span><br><span class="line">  tags: /tags   //标签                  </span><br><span class="line">  about: /about   //关于</span><br></pre></td></tr></table></figure></p><p>底下代码是一篇包含 分类 文章的例子：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">title: 分类测试</span><br><span class="line">categories:</span><br><span class="line">- hexo                       （这个就是文章的分类了）</span><br></pre></td></tr></table></figure></p><p>categories文件夹里面是index.md文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">title: 分类</span><br><span class="line">date: 2014-12-22</span><br><span class="line">type: &quot;categories&quot;</span><br><span class="line">layout: &quot;categories&quot;</span><br></pre></td></tr></table></figure><h3 id="hexo-categories和tags页面不显示解决办法"><a href="#hexo-categories和tags页面不显示解决办法" class="headerlink" title="hexo categories和tags页面不显示解决办法"></a>hexo categories和tags页面不显示解决办法</h3><h4 id="方法一："><a href="#方法一：" class="headerlink" title="方法一：　　"></a>方法一：　　</h4><p>scaffolds/draft.md　　　　<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: &#123;&#123; title &#125;&#125;</span><br><span class="line">tags: &#123;&#123; tags &#125;&#125;</span><br><span class="line">---</span><br></pre></td></tr></table></figure></p><p>scaffolds/post.md<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: &#123;&#123; title &#125;&#125;</span><br><span class="line">date: &#123;&#123; date &#125;&#125;</span><br><span class="line">tags: &#123;&#123; tags &#125;&#125;</span><br><span class="line">---</span><br></pre></td></tr></table></figure></p><p>tags/index<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: Tagcloud</span><br><span class="line">date: 2017-04-26 17:47:43</span><br><span class="line">type: &quot;tags&quot;</span><br><span class="line">layout: &quot;tags&quot;</span><br><span class="line">---</span><br></pre></td></tr></table></figure></p><h4 id="方法二："><a href="#方法二：" class="headerlink" title="方法二："></a>方法二：</h4><p>1.默认是没有 categories 和 tags 的需要<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo new page &quot;tags&quot; </span><br><span class="line"></span><br><span class="line">hexo new page &quot;categories&quot;</span><br></pre></td></tr></table></figure></p><p>2.编辑 /tags/index.md /categories/index.md<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">type: &quot;tags&quot;</span><br><span class="line">layout: &quot;tags&quot;</span><br><span class="line"></span><br><span class="line">type: &quot;categories&quot;</span><br><span class="line">layout: &quot;categories&quot;</span><br></pre></td></tr></table></figure></p><h3 id="修改底部logo"><a href="#修改底部logo" class="headerlink" title="修改底部logo"></a>修改底部logo</h3><p>找到 \themes\next\layout_partials\下面的footer.swig文件</p><h3 id="补充：高亮一段代码"><a href="#补充：高亮一段代码" class="headerlink" title="补充：高亮一段代码"></a>补充：高亮一段代码</h3><p>在右边标记代码的语言，就能显示其相应的代码颜色，诸如Java，JavaScript，php，Python，c等等<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@requires_authorization</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">SomeClass</span>:</span></span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    <span class="comment"># A comment</span></span><br><span class="line">    <span class="keyword">print</span> <span class="string">'hello world'</span></span><br></pre></td></tr></table></figure></p><h3 id="文字高亮"><a href="#文字高亮" class="headerlink" title="文字高亮"></a>文字高亮</h3><p>只需要在在相关文字的前后加上<code>模板字符串符</code>号就行</p><hr>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;如何给博客披上一层靓丽的皮肤&lt;/p&gt;
    
    </summary>
    
      <category term="hexo" scheme="https://yveda.github.io/categories/hexo/"/>
    
    
      <category term="hexo-config" scheme="https://yveda.github.io/tags/hexo-config/"/>
    
      <category term="hexo-theme" scheme="https://yveda.github.io/tags/hexo-theme/"/>
    
  </entry>
  
  <entry>
    <title>用hexo搭建博客</title>
    <link href="https://yveda.github.io/2017/12/08/hexo01/"/>
    <id>https://yveda.github.io/2017/12/08/hexo01/</id>
    <published>2017-12-08T14:51:29.000Z</published>
    <updated>2018-06-02T03:52:44.695Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>搭建博客的初衷是记录开发过程中遇到的坑，进行分享和交流<br><a id="more"></a></p><h2 id="安装工具git和node-js"><a href="#安装工具git和node-js" class="headerlink" title="安装工具git和node.js"></a>安装工具git和node.js</h2><h2 id="搭建hexo"><a href="#搭建hexo" class="headerlink" title="搭建hexo"></a>搭建hexo</h2><h3 id="hexo常用的命令"><a href="#hexo常用的命令" class="headerlink" title="hexo常用的命令"></a>hexo常用的命令</h3><blockquote><ul><li>$ hexo g #完整命令为hexo generate，用于生成静态文件</li><li>$ hexo s #完整命令为hexo server，用于启动服务器，主要用来本地预览</li><li>$ hexo d #完整命令为hexo deploy，用于将本地文件发布到github上</li><li>$ hexo n #完整命令为hexo new，用于新建一篇文章</li><li>$ hexo new page “pageName” ,新建页面</li></ul></blockquote><h3 id="安装脚手架"><a href="#安装脚手架" class="headerlink" title="安装脚手架"></a>安装脚手架</h3><p>鼠标右键任意地方，选择Git Bash，使用以下命令安装<code>hexo</code><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-cli -g</span><br></pre></td></tr></table></figure></p><h3 id="如果之后在使用的过程中，遇到以下的错误"><a href="#如果之后在使用的过程中，遇到以下的错误" class="headerlink" title="如果之后在使用的过程中，遇到以下的错误"></a>如果之后在使用的过程中，遇到以下的错误</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ERROR Deployer not found : github</span><br></pre></td></tr></table></figure><h4 id="则运行以下命令-或者你直接先运行这个命令更好。"><a href="#则运行以下命令-或者你直接先运行这个命令更好。" class="headerlink" title="则运行以下命令,或者你直接先运行这个命令更好。"></a>则运行以下命令,或者你直接先运行这个命令更好。</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><h3 id="创建放置博客的文件夹"><a href="#创建放置博客的文件夹" class="headerlink" title="创建放置博客的文件夹"></a>创建放置博客的文件夹</h3><p>D:\HEXO  记得备份，点击鼠标右键，选择Git Bash，执行以下命令，Hexo会自动在该文件夹下下载搭建网站所需的所有文件。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo init</span><br></pre></td></tr></table></figure><h3 id="安装依赖包"><a href="#安装依赖包" class="headerlink" title="安装依赖包"></a>安装依赖包</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install</span><br></pre></td></tr></table></figure><h3 id="看看刚刚下载的HEXO文件带来了什么"><a href="#看看刚刚下载的HEXO文件带来了什么" class="headerlink" title="看看刚刚下载的HEXO文件带来了什么"></a>看看刚刚下载的HEXO文件带来了什么</h3><p>在D:\HEXO内执行以下命令:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ hexo g</span><br><span class="line">$ hexo s</span><br></pre></td></tr></table></figure><p>然后用浏览器访问<code>http://localhost:4000/</code>，会看到一个漂亮的博客了，当然这个博客只是在本地的，别人是看不到的，hexo3.0使用的默认主题是landscape。轻轻松松就看到了一点成果，是不是很激动，这就是hexo的强大之处，这个本地预览的功能，我真是爱不释手。</p><h3 id="接下来在github里面创建一个仓库"><a href="#接下来在github里面创建一个仓库" class="headerlink" title="接下来在github里面创建一个仓库"></a>接下来在github里面创建一个仓库</h3><p>仓库名字格式为youname.github.io,例如我的叫Yveda.github.io，注意：此处的youname必须为你的github用户名，用户名是可以用来登陆的。</p><h3 id="部署本地文件到github"><a href="#部署本地文件到github" class="headerlink" title="部署本地文件到github"></a>部署本地文件到github</h3><p> 既然Repository已经创建了，当然是先把博客放到Github上去看看效果。编辑D：\hexo下的_config.yml文件。在_config.yml最下方，添加如下配置(命令中的第一个Yveda为Github的用户名,第二Yveda为之前New的Repository的名字,记得改成自己的。另外记得一点，hexo的配置文件中任何’:’后面都是带一个空格的),如果配置以下命令出现ERROR Deployer not found : github，则参考上文的解决方法。<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy: </span><br><span class="line">  type: git</span><br><span class="line">  repository: http://github.com/Yveda/Yvead.github.io.git</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure></p><p> 配置好_config.yml并保存后，执行以下命令部署到Github上。如果你是第一次使用Github或者是已经使用过，但没有配置过SSH，则可能需要配置一下，本文的另一种发布到github的配置一节有介绍。</p><blockquote><ul><li>$ hexo g</li><li>$ hexo d</li></ul></blockquote><p> 执行上面的第二个命令，可能会要你输入用户名和密码，皆为注册Github时的数据，输入密码是不显示任何东西的，输入完毕回车即可。</p><p> 此时，我们的博客已经搭建起来，并发布到Github上了，这时可以登陆自己的Github查看代码是否已经推送到对应Repository，在浏览器访问Yveda.github.io就能看到自己的博客了。第一次访问地址，可能访问不了，您可以在几分钟后进行访问，一般不超过10分钟。</p><h3 id="hexo的配置文件"><a href="#hexo的配置文件" class="headerlink" title="hexo的配置文件"></a>hexo的配置文件</h3><p> hexo里面有两个常用到的配置文件，分别是整个博客的配置文件D:\HEXO_config.yml和主题的配置文件D:\HEXO\themes\light_config.yml，此地址是对于我来说，hexo3.0使用的默认主题是landscape，因此你们的地址应该是D:\HEXO\themes\landscape_config.yml，下文所有讲到light的地方，你们将之换为自己的主题名即可。本博客使用的主题是基于light改善的主题，目前还在完善中，如果完成的比较好，以后可能发布在github上。如果你想自己挑选喜欢的主题，hexo官方提供了12个主题供你自己选择，使用方法很简单，点击自己想要的主题，进入该主题的Repository，使用Git将主题clone到本地，然后将整个文件夹复制到D:\HEXO\themes文件夹下，将D:\HEXO_config.yml里的theme名字改为自己下载的主题的文件夹名即可。</p><h3 id="Hexo配置文件详细说明"><a href="#Hexo配置文件详细说明" class="headerlink" title="Hexo配置文件详细说明"></a>Hexo配置文件详细说明</h3><p>D:\HEXO_config.yml</p><h4 id="网站"><a href="#网站" class="headerlink" title="网站"></a>网站</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">参数              描述</span><br><span class="line">title           网站标题</span><br><span class="line">subtitle        网站副标题</span><br><span class="line">description     网站描述</span><br><span class="line">author          您的名字</span><br><span class="line">language        网站使用的语言</span><br><span class="line">timezone        网站时区。Hexo 默认使用您电脑的时区。时区列表。比如说：America/New_York, Japan, 和 UTC 。</span><br></pre></td></tr></table></figure><p> 其中，description主要用于SEO，告诉搜索引擎一个关于您站点的简单描述，通常建议在其中包含您网站的关键词。author参数用于主题显示文章的作者。</p><h4 id="网址"><a href="#网址" class="headerlink" title="网址"></a>网址</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">参数                 描述                       默认值</span><br><span class="line">url                  网址     </span><br><span class="line">root                 网站根目录    </span><br><span class="line">permalink            文章的永久链接格式   :year/:month/:day/:title/</span><br><span class="line">permalink_defaults   永久链接中各部分的默认值</span><br></pre></td></tr></table></figure><h4 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">参数                 描述   </span><br><span class="line">source_dir       资源文件夹，这个文件夹用来存放内容。     </span><br><span class="line">public_dir       公共文件夹，这个文件夹用于存放生成的站点文件。 </span><br><span class="line">tag_dir          标签文件夹  </span><br><span class="line">archive_dir      归档文件夹，按年份</span><br><span class="line">category_dir     分类文件夹，按标签</span><br><span class="line">code_dir         Include code 文件夹   </span><br><span class="line">i18n_dir         国际化（i18n）文件夹   </span><br><span class="line">skip_render      跳过指定文件的渲染，您可使用 glob 表达式来匹配路径。</span><br></pre></td></tr></table></figure><h4 id="文章"><a href="#文章" class="headerlink" title="文章"></a>文章</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">参数                  描述  </span><br><span class="line">new_post_name       新文章的文件名称    </span><br><span class="line">default_layout      预设布局    </span><br><span class="line">auto_spacing        在中文和英文之间加入空格    </span><br><span class="line">titlecase           把标题转换为 title case   </span><br><span class="line">external_link       在新标签中打开链接 </span><br><span class="line">filename_case       把文件名称转换为 (1) 小写或 (2) 大写     </span><br><span class="line">render_drafts       显示草稿    </span><br><span class="line">post_asset_folder   启动 Asset 文件夹    </span><br><span class="line">relative_link       把链接改为与根目录的相对位址  </span><br><span class="line">future              显示未来的文章     </span><br><span class="line">highlight           代码块的设置</span><br></pre></td></tr></table></figure><h4 id="分类-amp-标签"><a href="#分类-amp-标签" class="headerlink" title="分类&amp;标签"></a>分类&amp;标签</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">参数                  描述          默认值</span><br><span class="line">default_category    默认分类    uncategorized</span><br><span class="line">category_map        分类别名    </span><br><span class="line">tag_map             标签别名</span><br></pre></td></tr></table></figure><h4 id="时间-日期格式"><a href="#时间-日期格式" class="headerlink" title="时间/日期格式"></a>时间/日期格式</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">时间/日期格式</span><br></pre></td></tr></table></figure><h4 id="分页"><a href="#分页" class="headerlink" title="分页"></a>分页</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">参数          描述                              默认值</span><br><span class="line">per_page    每页显示的文章量 (0 = 关闭分页功能)   10</span><br><span class="line">pagination_dir  分页目录                        page</span><br></pre></td></tr></table></figure><h4 id="扩展"><a href="#扩展" class="headerlink" title="扩展"></a>扩展</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">参数          描述</span><br><span class="line">theme       当前主题名称。值为false时禁用主题</span><br><span class="line">deploy      部署部分的设置</span><br></pre></td></tr></table></figure><h3 id="修改后保存更新查看效果"><a href="#修改后保存更新查看效果" class="headerlink" title="修改后保存更新查看效果"></a>修改后保存更新查看效果</h3><p>按照自己的意愿修改完后，执行hexo g，hexo s，打开localhost:4000看看效果。</p><h3 id="发表一篇文章"><a href="#发表一篇文章" class="headerlink" title="发表一篇文章"></a>发表一篇文章</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1.在Git Bash执行命令：$ hexo new &quot;my new post&quot;</span><br><span class="line">2.在D:\HEXO\source\_post中打开my-new-post.md，打开方式使用记事本或subline vscode。</span><br><span class="line">3.hexo中写文章使用的是Markdown，没接触过的可以看下[Markdown语法说明](https://note.youdao.com/),[一分钟学会Markdown](https://note.youdao.com/)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">title: my new post #可以改成中文的，如“新文章”</span><br><span class="line">date: 2015-04-08 22:56:29 #发表日期，一般不改动</span><br><span class="line">categories: blog #文章文类</span><br><span class="line">tags: [博客，文章] #文章标签，多于一项时用这种格式，只有一项时使用tags: blog</span><br><span class="line">---</span><br><span class="line">#这里是正文，用markdown写，你可以选择写一段显示在首页的简介后，加上</span><br><span class="line">&lt;!--more--&gt;#在&lt;!--more--&gt;之前的内容会显示在首页，之后的内容会被隐藏，当游客点击Read more才能看到。</span><br></pre></td></tr></table></figure><h3 id="写完文章后-查看效果"><a href="#写完文章后-查看效果" class="headerlink" title="写完文章后,查看效果"></a>写完文章后,查看效果</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ hexo g生成静态文件。</span><br><span class="line">$ hexo s在本地预览效果。</span><br><span class="line">hexo d同步到github，然后使用http://Yveda.github.io进行访问。</span><br></pre></td></tr></table></figure><h3 id="删除一篇文章"><a href="#删除一篇文章" class="headerlink" title="删除一篇文章"></a>删除一篇文章</h3><p>在D:\HEXO\source_post 删除想要删除的文件，然后再执行hexo g,hexo d</p><h3 id="清除缓存"><a href="#清除缓存" class="headerlink" title="清除缓存"></a>清除缓存</h3><p>清除缓存文件db.json和已生成的静态文件public。在某些情况（尤其是更换主题后），如果发现您对站点的更改无论如何也不生效，您可能需要运行该命令。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo clean</span><br></pre></td></tr></table></figure><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>看到博客最终生成，确实有点小激动，经历很多坑，都写在上面了。</p><hr>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;搭建博客的初衷是记录开发过程中遇到的坑，进行分享和交流&lt;br&gt;
    
    </summary>
    
      <category term="hexo" scheme="https://yveda.github.io/categories/hexo/"/>
    
    
      <category term="hexo-config" scheme="https://yveda.github.io/tags/hexo-config/"/>
    
  </entry>
  
</feed>
